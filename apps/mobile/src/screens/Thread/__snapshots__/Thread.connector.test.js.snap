// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mapDispatchToProps creates actions 1`] = `
{
  "createMessage": [Function],
  "fetchMessages": [Function],
  "reconnectFetchMessages": [Function],
  "sendIsTyping": [Function],
  "showMember": [Function],
  "showTopic": [Function],
  "updateThreadReadTime": [Function],
}
`;

exports[`mapDispatchToProps creates actions 2`] = `
[
  [
    {
      "graphql": {
        "query": "mutation CreateMessageMutation($messageThreadId: String, $text: String, $createdAt: Date) {
            createMessage(
              data: {messageThreadId: $messageThreadId, text: $text, createdAt: $createdAt}
            ) {
              id
              text
              createdAt
              creator {
                id
                name
                avatarUrl
              }
              messageThread {
                id
                createdAt
                updatedAt
                participants {
                  id
                  name
                  avatarUrl
                }
              }
            }
          }",
        "variables": {
          "messageThreadId": 77,
          "optimistic": true,
          "text": "some text",
        },
      },
      "meta": {
        "analytics": "Direct Message Sent",
        "extractModel": "Message",
        "forNewThread": undefined,
        "messageText": "some text",
        "messageThreadId": 77,
        "optimistic": true,
        "tempId": "messageThread77_1",
      },
      "type": "Thread/CREATE_MESSAGE",
    },
  ],
  [
    {
      "graphql": {
        "query": "query MessageThreadMessagesQuery($id: ID, $cursor: ID, $messagePageSize: Int = 20) {
            messageThread(id: $id) {
              id
              messages(first: $messagePageSize, cursor: $cursor, order: \\"desc\\") {
                hasMore
                total
                items {
                  createdAt
                  id
                  text
                  creator {
                    id
                    name
                    avatarUrl
                  }
                }
              }
              participants {
                avatarUrl
                id
                name
              }
            }
          }",
        "variables": {
          "cursor": 3,
          "id": 77,
          "messagePageSize": 20,
        },
      },
      "meta": {
        "afterInteractions": true,
        "extractModel": "MessageThread",
        "extractQueryResults": {
          "getItems": [Function],
        },
        "id": 77,
        "reset": undefined,
      },
      "type": "Thread/FETCH_MESSAGES",
    },
  ],
  [
    {
      "graphql": {
        "query": "query MessageThreadMessagesQuery($id: ID, $cursor: ID, $messagePageSize: Int = 20) {
            messageThread(id: $id) {
              id
              messages(first: $messagePageSize, cursor: $cursor, order: \\"desc\\") {
                hasMore
                total
                items {
                  createdAt
                  id
                  text
                  creator {
                    id
                    name
                    avatarUrl
                  }
                }
              }
              participants {
                avatarUrl
                id
                name
              }
            }
          }",
        "variables": {
          "id": 77,
          "messagePageSize": 20,
        },
      },
      "meta": {
        "afterInteractions": true,
        "extractModel": "MessageThread",
        "extractQueryResults": {
          "getItems": [Function],
        },
        "id": 77,
        "reset": true,
      },
      "type": "Thread/FETCH_MESSAGES",
    },
  ],
  [
    {
      "meta": {
        "id": 77,
      },
      "payload": {
        "api": {
          "method": "POST",
          "path": "/noo/post/77/update-last-read",
        },
      },
      "type": "Thread/UPDATE_THREAD_READ_TIME",
    },
  ],
]
`;

exports[`mapDispatchToProps creates actions 3`] = `[]`;

exports[`mapStateToProps returns the right keys 1`] = `
{
  "currentUserId": undefined,
  "hasMore": undefined,
  "id": 1,
  "isConnected": undefined,
  "messages": [],
  "pending": undefined,
  "thread": SessionBoundModel {
    "_fields": {
      "id": 1,
    },
  },
}
`;
