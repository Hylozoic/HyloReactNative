# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.46.1"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight."
  desc "This will also make sure the profile is up to date."
  lane :beta do |options|
    match(
      type: "appstore",
      force_for_new_devices: true,
      readonly: true
    )
    if !options[:ci]
      increment_build_number(
        xcodeproj: 'HyloReactNative.xcodeproj'
      )
    end
    gym(
      scheme: "HyloReactNative",
      configuration: "Release",
      export_options: {iCloudContainerEnvironment: 'Production'}
    )
    pilot(
      skip_waiting_for_build_processing: true
    )
  end

  desc "Build a development IPA file to install to a device."
  desc "This builds using the connection with metro running in terminal."
  lane :dev do
    match(
      type: "development",
      readonly: true
    )
    gym(
     scheme: "HyloReactNative",
     configuration: "Debug",
     export_method: "development",
     export_options: {iCloudContainerEnvironment: 'Development'}
    )
  end

  desc "Build an IPA file for QA distribution."
  desc "Be aware that this will hit the live API."
  lane :qa do
    match(
      type: "adhoc",
      force_for_new_devices: true,
      readonly: true
    )
    gym(
     scheme: "HyloReactNative",
     configuration: "Release",
     export_method: "ad-hoc",
     export_options: {iCloudContainerEnvironment: 'Development'}
    )
  end

  desc "Update team device ids from the devices.txt file."
  lane :devices do
    register_devices(
      devices_file: "./devices.txt"
    )
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
