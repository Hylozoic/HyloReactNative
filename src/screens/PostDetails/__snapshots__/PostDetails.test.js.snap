// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostDetails renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 288,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockedScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "flex": 1,
                              "paddingBottom": 0,
                            }
                          }
                        >
                          <RCTScrollView
                            ListFooterComponent={[Function]}
                            contentContainerStyle={
                              {
                                "flexGrow": 1,
                                "justifyContent": "flex-end",
                                "paddingTop": 100,
                              }
                            }
                            data={[]}
                            getItem={[Function]}
                            getItemCount={[Function]}
                            initialScrollIndex={0}
                            invertStickyHeaders={true}
                            inverted={true}
                            isInvertedVirtualizedList={true}
                            keyExtractor={[Function]}
                            keyboardDismissMode="interactive"
                            keyboardShouldPersistTaps="never"
                            onContentSizeChange={[Function]}
                            onLayout={[Function]}
                            onMomentumScrollBegin={[Function]}
                            onMomentumScrollEnd={[Function]}
                            onMoveShouldSetResponder={[Function]}
                            onMoveShouldSetResponderCapture={[Function]}
                            onResponderEnd={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderReject={[Function]}
                            onResponderRelease={[Function]}
                            onResponderStart={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            onStartShouldSetResponder={[Function]}
                            onStartShouldSetResponderCapture={[Function]}
                            renderItem={[Function]}
                            scrollEventThrottle={50}
                            stickyHeaderIndices={[]}
                            style={
                              [
                                {
                                  "transform": [
                                    {
                                      "scaleY": -1,
                                    },
                                  ],
                                },
                                undefined,
                              ]
                            }
                          >
                            <View>
                              <View
                                onLayout={[Function]}
                              >
                                <View>
                                  <View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <View>
                                          <View
                                            style={
                                              [
                                                {
                                                  "overflow": "hidden",
                                                },
                                                undefined,
                                              ]
                                            }
                                          >
                                            <FastImageView
                                              defaultSource={null}
                                              resizeMode="cover"
                                              source={
                                                {
                                                  "uri": "me.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Text>
                                          Houdini Magic
                                        </Text>
                                      </View>
                                      <View>
                                        <View
                                          accessibilityState={
                                            {
                                              "busy": undefined,
                                              "checked": undefined,
                                              "disabled": undefined,
                                              "expanded": undefined,
                                              "selected": undefined,
                                            }
                                          }
                                          accessibilityValue={
                                            {
                                              "max": undefined,
                                              "min": undefined,
                                              "now": undefined,
                                              "text": undefined,
                                            }
                                          }
                                          accessible={true}
                                          collapsable={false}
                                          focusable={true}
                                          hitSlop={5}
                                          onClick={[Function]}
                                          onResponderGrant={[Function]}
                                          onResponderMove={[Function]}
                                          onResponderRelease={[Function]}
                                          onResponderTerminate={[Function]}
                                          onResponderTerminationRequest={[Function]}
                                          onStartShouldSetResponder={[Function]}
                                        >
                                          <View />
                                        </View>
                                      </View>
                                      <Text>
                                        7 years ago
                                      </Text>
                                    </View>
                                    <View>
                                      <View>
                                        <Text>
                                          REQUEST
                                        </Text>
                                      </View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        hitSlop={
                                          {
                                            "bottom": 20,
                                            "left": 20,
                                            "right": 20,
                                            "top": 20,
                                          }
                                        }
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Icon
                                          name="More"
                                        />
                                      </View>
                                    </View>
                                  </View>
                                  <RCTScrollView
                                    horizontal={true}
                                  >
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Text>
                                          #
                                          topic1
                                        </Text>
                                      </View>
                                    </View>
                                  </RCTScrollView>
                                  <View>
                                    <View>
                                      <Text>
                                        Hi
                                      </Text>
                                    </View>
                                    <View
                                      style={
                                        [
                                          {},
                                          undefined,
                                          undefined,
                                        ]
                                      }
                                      testID="html"
                                    >
                                      <View
                                        style={
                                          [
                                            {},
                                            undefined,
                                            undefined,
                                          ]
                                        }
                                        testID="body"
                                      >
                                        <Text
                                          allowFontScaling={true}
                                          selectable={false}
                                          style={
                                            [
                                              {
                                                "fontSize": 14,
                                              },
                                              undefined,
                                              undefined,
                                            ]
                                          }
                                        >
                                          Lo
                                        </Text>
                                      </View>
                                    </View>
                                    <View>
                                      <View>
                                        <View
                                          accessibilityState={
                                            {
                                              "busy": undefined,
                                              "checked": undefined,
                                              "disabled": undefined,
                                              "expanded": undefined,
                                              "selected": undefined,
                                            }
                                          }
                                          accessibilityValue={
                                            {
                                              "max": undefined,
                                              "min": undefined,
                                              "now": undefined,
                                              "text": undefined,
                                            }
                                          }
                                          accessible={true}
                                          collapsable={false}
                                          focusable={true}
                                          hitSlop={
                                            {
                                              "bottom": 20,
                                              "left": 20,
                                              "right": 20,
                                              "top": 15,
                                            }
                                          }
                                          onClick={[Function]}
                                          onResponderGrant={[Function]}
                                          onResponderMove={[Function]}
                                          onResponderRelease={[Function]}
                                          onResponderTerminate={[Function]}
                                          onResponderTerminationRequest={[Function]}
                                          onStartShouldSetResponder={[Function]}
                                        >
                                          <View>
                                            <Icon
                                              name="Smiley"
                                            />
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                  <View />
                                  <View>
                                    <View
                                      accessibilityState={
                                        {
                                          "busy": undefined,
                                          "checked": undefined,
                                          "disabled": undefined,
                                          "expanded": undefined,
                                          "selected": undefined,
                                        }
                                      }
                                      accessibilityValue={
                                        {
                                          "max": undefined,
                                          "min": undefined,
                                          "now": undefined,
                                          "text": undefined,
                                        }
                                      }
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                    >
                                      <View>
                                        <Text>
                                          Posted In
                                           
                                        </Text>
                                        <View>
                                          <View
                                            accessibilityState={
                                              {
                                                "busy": undefined,
                                                "checked": undefined,
                                                "disabled": undefined,
                                                "expanded": undefined,
                                                "selected": undefined,
                                              }
                                            }
                                            accessibilityValue={
                                              {
                                                "max": undefined,
                                                "min": undefined,
                                                "now": undefined,
                                                "text": undefined,
                                              }
                                            }
                                            accessible={true}
                                            collapsable={false}
                                            focusable={true}
                                            onClick={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                          >
                                            <Text
                                              numberOfLines={1}
                                            />
                                          </View>
                                        </View>
                                        <Icon
                                          name="ArrowDown"
                                        />
                                      </View>
                                    </View>
                                  </View>
                                  <View />
                                  <div
                                    colors={
                                      [
                                        "rgba(225, 229, 233, 0.3)",
                                        "rgba(225, 229, 233, 0)",
                                      ]
                                    }
                                  >
                                    <View
                                      accessibilityState={
                                        {
                                          "busy": undefined,
                                          "checked": undefined,
                                          "disabled": undefined,
                                          "expanded": undefined,
                                          "selected": undefined,
                                        }
                                      }
                                      accessibilityValue={
                                        {
                                          "max": undefined,
                                          "min": undefined,
                                          "now": undefined,
                                          "text": undefined,
                                        }
                                      }
                                      accessible={true}
                                      collapsable={false}
                                      focusable={false}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                    >
                                      <Text>
                                        Be the first to comment
                                      </Text>
                                    </View>
                                  </div>
                                  <View />
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                            }
                          }
                          testID="container"
                        >
                          <View
                            onLayout={[Function]}
                            style={
                              [
                                {
                                  "flex": 1,
                                },
                                {
                                  "marginBottom": 0,
                                  "marginLeft": 0,
                                  "marginRight": 0,
                                },
                                {
                                  "backgroundColor": "#FFFFFF",
                                  "borderWidth": 0,
                                  "marginBottom": 0,
                                  "paddingBottom": 0,
                                },
                              ]
                            }
                          >
                            <View>
                              <View>
                                <View>
                                  <ActivityIndicator
                                    accessibilityHint="loading"
                                    color="#818A88"
                                    size="small"
                                  />
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": true,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  hitSlop={
                                    {
                                      "bottom": 10,
                                      "left": 10,
                                      "right": 10,
                                      "top": 5,
                                    }
                                  }
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  testID="submitButton"
                                >
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      [
                                        {
                                          "color": undefined,
                                          "fontSize": 26,
                                        },
                                        undefined,
                                        {
                                          "fontFamily": "Material Icons",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
