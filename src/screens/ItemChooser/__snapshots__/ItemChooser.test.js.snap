// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemChooser #setupItemSections for chooser renders current selection if intialItems is defined (no headers) 1`] = `
Array [
  Object {
    "data": Array [
      Object {
        "chosen": true,
        "id": "1",
      },
      Object {
        "chosen": true,
        "id": "2",
      },
      Object {
        "chosen": true,
        "id": "3",
      },
    ],
    "label": undefined,
  },
]
`;

exports[`ItemChooser #setupItemSections for chooser renders current selection with header if initialItems and addedItems are defined  1`] = `
Array [
  Object {
    "data": Array [
      Object {
        "chosen": false,
        "id": "1",
      },
    ],
    "label": "Current Selection",
  },
  Object {
    "data": Array [
      Object {
        "chosen": true,
        "id": "2",
      },
      Object {
        "chosen": true,
        "id": "3",
      },
    ],
    "label": "Added",
  },
]
`;

exports[`ItemChooser #setupItemSections for chooser renders sections 1`] = `
Array [
  Object {
    "data": Array [
      Object {
        "chosen": false,
        "id": "1",
      },
      Object {
        "chosen": false,
        "id": "2",
      },
      Object {
        "chosen": false,
        "id": "3",
      },
    ],
    "label": "Current Selection",
  },
  Object {
    "data": Array [
      Object {
        "chosen": true,
        "id": "5",
      },
    ],
    "label": "Added",
  },
]
`;

exports[`ItemChooser #setupItemSections for chooser renders suggested items when search term supplied 1`] = `
Array [
  Object {
    "data": Array [
      Object {
        "chosen": true,
        "id": "1",
      },
      Object {
        "chosen": false,
        "id": "2",
      },
      Object {
        "chosen": false,
        "id": "3",
      },
    ],
  },
]
`;

exports[`ItemChooser #setupItemSections for chooser renders suggested items when search term supplied 2`] = `
Array [
  Object {
    "data": Array [
      Object {
        "chosen": true,
        "id": "1",
      },
      Object {
        "chosen": false,
        "id": "2",
      },
      Object {
        "chosen": false,
        "id": "3",
      },
    ],
  },
]
`;

exports[`ItemChooser #setupItemSections for picker renders default suggested items 1`] = `
Array [
  Object {
    "data": Array [
      Object {
        "chosen": false,
        "id": "1",
      },
      Object {
        "chosen": false,
        "id": "2",
      },
      Object {
        "chosen": false,
        "id": "3",
      },
    ],
    "label": "Recent Items",
  },
]
`;

exports[`ItemChooser #setupItemSections for picker renders sections 1`] = `Array []`;

exports[`ItemChooser #setupItemSections for picker renders suggested items when search term supplied 1`] = `
Array [
  Object {
    "data": Array [
      Object {
        "id": "2",
      },
      Object {
        "id": "3",
      },
    ],
  },
]
`;

exports[`ItemChooser full renders as expected 1`] = `
<View>
  <View>
    <View>
      <Icon
        name="Search"
      />
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        autoFocus={true}
        editable={true}
        onChangeText={[Function]}
        onFocus={[MockFunction]}
        placeholder="Begin type to searching"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={<View />}
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`ItemChooser shallow renders as expected 1`] = `
<View>
  <ItemChooserListHeader
    ItemRowComponent={[Function]}
    autoFocus={true}
    clearSearchTerm={[Function]}
    fetchSearchSuggestions={[Function]}
    getSearchSuggestions={[Function]}
    initialItems={Array []}
    navigation={
      Object {
        "setOptions": [MockFunction],
        "setParams": [MockFunction],
      }
    }
    onFocus={[MockFunction]}
    route={
      Object {
        "params": Object {
          "ItemRowComponent": [Function],
          "fetchSearchSuggestions": [Function],
          "getSearchSuggestions": [Function],
          "initialItems": Array [
            Object {
              "id": "member1",
            },
            Object {
              "id": "member2",
            },
          ],
          "screenTitle": "Screen Title",
          "updateItems": [MockFunction],
        },
      }
    }
    searchPlaceholder="Begin type to searching"
    setSearchTerm={[Function]}
    suggestedItems={Array []}
  />
  <SectionList
    ListFooterComponent={<View />}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="handled"
    renderItem={[Function]}
    renderSectionHeader={[Function]}
    sections={Array []}
    stickySectionHeadersEnabled={true}
  />
</View>
`;
