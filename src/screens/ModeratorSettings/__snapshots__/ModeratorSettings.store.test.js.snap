// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addModerator 1`] = `
Object {
  "graphql": Object {
    "query": "mutation ($personId: ID, $groupId: ID) {
        addModerator(personId: $personId, groupId: $groupId) {
          id
          moderators (first: 100) {
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "groupId": 111,
      "personId": 123,
    },
  },
  "meta": Object {
    "groupId": 111,
    "optimistic": true,
    "personId": 123,
  },
  "type": "ModeratorSettings/ADD_MODERATOR",
}
`;

exports[`clearModeratorSuggestions 1`] = `
Object {
  "type": "ModeratorSettings/CLEAR_MODERATOR_SUGGESTIONS",
}
`;

exports[`fetchModeratorSuggestions 1`] = `
Object {
  "graphql": Object {
    "query": "query ($id: ID, $autocomplete: String) {
        group (id: $id) {
          id
          members (first: 10, autocomplete: $autocomplete) {
            hasMore
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "autocomplete": "to",
      "id": 123,
    },
  },
  "meta": Object {
    "extractModel": "Group",
  },
  "type": "ModeratorSettings/FETCH_MODERATOR_SUGGESTIONS",
}
`;

exports[`fetchModerators 1`] = `
Object {
  "graphql": Object {
    "query": "query ($slug: String) {
        group (slug: $slug) {
          id
          name
          slug
          moderators (first: 100) {
            hasMore
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "slug": "mygroup",
    },
  },
  "meta": Object {
    "extractModel": "Group",
  },
  "type": "ModeratorSettings/FETCH_MODERATORS",
}
`;

exports[`removeModerator 1`] = `
Object {
  "graphql": Object {
    "query": "mutation ($personId: ID, $groupId: ID, $isRemoveFromGroup: Boolean) {
        removeModerator(personId: $personId, groupId: $groupId, isRemoveFromGroup: $isRemoveFromGroup) {
          id
          moderators (first: 100) {
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "groupId": 111,
      "isRemoveFromGroup": true,
      "personId": 123,
    },
  },
  "meta": Object {
    "groupId": 111,
    "isRemoveFromGroup": true,
    "optimistic": true,
    "personId": 123,
  },
  "type": "ModeratorSettings/REMOVE_MODERATOR",
}
`;
