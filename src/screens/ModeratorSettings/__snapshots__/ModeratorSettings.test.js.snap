// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModeratorSettings matches the last snapshot 1`] = `
<FlatList
  ListHeaderComponent={
    <View>
      <View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <Text>
            <Icon
              green={true}
              name="Plus"
            />
             Add New
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  }
  data={
    Array [
      Object {
        "avatarUrl": "http://aurl.com",
        "id": 10,
        "name": "John Current",
      },
      Object {
        "avatarUrl": "http://aurl.com",
        "id": 11,
        "name": "John Other",
      },
    ]
  }
  keyExtractor={[Function]}
  keyboardShouldPersistTaps="always"
  numColumns={1}
  removeClippedSubviews={false}
  renderItem={[Function]}
/>
`;

exports[`ModeratorSettings renders ModeratorRow 1`] = `
<TouchableOpacity
  onPress={[Function]}
>
  <Avatar
    avatarUrl="http://aurl.com"
  />
  <Text>
    John Current
  </Text>
  <TouchableOpacity
    hitSlop={
      Object {
        "bottom": 15,
        "left": 10,
        "right": 10,
        "top": 15,
      }
    }
    onPress={[Function]}
  >
    <Text>
      Remove
    </Text>
  </TouchableOpacity>
</TouchableOpacity>
`;

exports[`ModeratorSettings renders ModeratorRow without removeModerator 1`] = `
<TouchableOpacity
  onPress={[Function]}
>
  <Avatar
    avatarUrl="http://aurl.com"
  />
  <Text>
    John Current
  </Text>
</TouchableOpacity>
`;

exports[`ModeratorSettings shows the Search component appropriately 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <View>
      <View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <Text>
            <Icon
              green={true}
              name="Plus"
            />
             Add New
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  }
  data={
    Array [
      Object {
        "avatarUrl": "http://aurl.com",
        "id": 10,
        "name": "John Current",
      },
      Object {
        "avatarUrl": "http://aurl.com",
        "id": 11,
        "name": "John Other",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  keyboardShouldPersistTaps="always"
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View>
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              <Icon
                green={true}
                name="Plus"
              />
               Add New
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Image
            source={
              Object {
                "uri": "http://aurl.com",
              }
            }
          />
        </View>
        <Text>
          John Current
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Image
            source={
              Object {
                "uri": "http://aurl.com",
              }
            }
          />
        </View>
        <Text>
          John Other
        </Text>
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 15,
              "left": 10,
              "right": 10,
              "top": 15,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <Text>
            Remove
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
