// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageRow calls showThread 1`] = `
<View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <View>
      <View>
        <View>
          <Image
            source={
              Object {
                "uri": "blah",
              }
            }
          />
        </View>
      </View>
      <View>
        <Text>
          Test User
        </Text>
        <Text
          numberOfLines={2}
        >
          
          This is a message.
        </Text>
        <Text>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`MessageRow renders correctly 1`] = `
<View>
  <TouchableOpacity
    onPress={[Function]}
  >
    <ThreadCard
      message={
        Array [
          Object {
            "creator": Object {
              "id": 1,
            },
            "id": 1,
          },
        ]
      }
      participants={
        Array [
          Object {
            "id": 2,
          },
        ]
      }
    />
  </TouchableOpacity>
</View>
`;

exports[`ThreadList fetches threads initially when empty 1`] = `
<View>
  <Text>
    No active conversations
  </Text>
  <RCTScrollView
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`ThreadList handles pending correctly with threads 1`] = `
<View>
  <View>
    <ActivityIndicator
      color="#818A88"
      size="small"
    />
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": 1,
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`ThreadList handles pending correctly without threads 1`] = `
<View>
  <Loading />
  <FlatList
    data={Array []}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`ThreadList handles when there are no threads correctly 1`] = `
<View>
  <Text>
    No active conversations
  </Text>
  <RCTScrollView
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`ThreadList renders correctly 1`] = `
<View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": 1,
          "lastMessage": Object {
            "id": 1,
          },
          "participants": Array [
            Object {
              "avatarUrl": "blah",
              "id": 1,
            },
          ],
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
