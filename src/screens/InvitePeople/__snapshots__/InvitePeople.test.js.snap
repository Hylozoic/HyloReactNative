// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InvitePeople handles tab-view functions 1`] = `
<TabBar
  getAccessibilityLabel={[Function]}
  getAccessible={[Function]}
  getLabelText={[Function]}
  getTestID={[Function]}
  indicatorStyle={
    Object {
      "backgroundColor": "#0DC39F",
    }
  }
  labelStyle={
    Object {
      "color": "#000",
      "fontFamily": "Circular-Book",
    }
  }
  renderIndicator={[Function]}
  tabStyle={
    Object {
      "width": 375,
    }
  }
/>
`;

exports[`InvitePeople handles tab-view functions 2`] = `<SendInvitesPage />`;

exports[`InvitePeople handles tab-view functions 3`] = `<PendingInvitesPage />`;

exports[`InvitePeople matches the last snapshot 1`] = `
<TabView
  gestureHandlerProps={Object {}}
  initialLayout={
    Object {
      "height": 0,
      "width": 750,
    }
  }
  keyboardDismissMode="auto"
  lazy={false}
  lazyPreloadDistance={0}
  navigationState={
    Object {
      "index": 0,
      "routes": Array [
        Object {
          "key": "0",
          "title": "Send Invites",
        },
        Object {
          "key": "1",
          "title": "Pending Invites",
        },
      ],
    }
  }
  onIndexChange={[Function]}
  removeClippedSubviews={false}
  renderLazyPlaceholder={[Function]}
  renderPager={[Function]}
  renderScene={[Function]}
  renderTabBar={[Function]}
  springConfig={Object {}}
  swipeEnabled={true}
  tabBarPosition="top"
  timingConfig={Object {}}
/>
`;

exports[`InvitePeople renders PendingInviteRow 1`] = `
<View>
  <View>
    <Text>
      john@doe.com
    </Text>
  </View>
  <View>
    <Text>
      just now
    </Text>
    <View>
      <TouchableOpacity
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onPress={[Function]}
      >
        <Text>
          Expire
        </Text>
      </TouchableOpacity>
      <TouchableOpacity
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onPress={[Function]}
      >
        <Text>
          Resend
        </Text>
      </TouchableOpacity>
    </View>
  </View>
</View>
`;

exports[`InvitePeople renders PendingInvitesPage 1`] = `
<ScrollView>
  <Button
    onPress={[MockFunction]}
    text="Resend All"
  />
  <PendingInviteRow
    expireInvitation={[MockFunction]}
    first={true}
    invite={
      Object {
        "email": "john@doe.com",
        "id": 10,
        "lastSentAt": 2018-03-03T05:51:49.903Z,
      }
    }
    resendInvitation={[MockFunction]}
  />
</ScrollView>
`;

exports[`InvitePeople renders SendInvitesPage 1`] = `
<ScrollView>
  <KeyboardFriendlyView>
    <View>
      <Text>
        Anyone with this link can join the group
      </Text>
      <Text>
        https://hylo.com/invitepathhere
      </Text>
      <View>
        <Button
          onPress={[Function]}
          text="Reset Link"
        />
        <Button
          onPress={[Function]}
          text="Copy Link"
        />
      </View>
      <TextInput
        onChangeText={[Function]}
        placeholder="Type email addresses"
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
      <TextInput
        multiline={true}
        numberOfLines={5}
        onChangeText={[Function]}
        underlineColorAndroid="rgba(0,0,0,0)"
        value="Hey! Here's an invite to the Axolotle group on Hylo."
      />
      <Button
        disabled={true}
        onPress={[Function]}
        text="Send Invite"
      />
    </View>
  </KeyboardFriendlyView>
</ScrollView>
`;
