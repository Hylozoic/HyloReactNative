// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor renders a new editor correctly 1`] = `
<KeyboardFriendlyView>
  <ScrollView
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
  >
    <View>
      <React.Fragment>
        <Text>
          What are you posting today?
        </Text>
        <View>
          <TypeButton
            onPress={[Function]}
            selected={true}
            type="discussion"
          />
          <TypeButton
            onPress={[Function]}
            selected={false}
            type="request"
          />
          <TypeButton
            onPress={[Function]}
            selected={false}
            type="offer"
          />
          <TypeButton
            onPress={[Function]}
            selected={false}
            type="resource"
          />
        </View>
      </React.Fragment>
      <Text>
        Title
      </Text>
      <View>
        <Component
          allowFontScaling={true}
          editable={true}
          maxLength={100}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          rejectResponderTermination={true}
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <Text>
        Details
      </Text>
      <withNavigation(InlineEditor)
        autoGrow={false}
        editable={true}
        inputStyle={
          Object {
            "fontFamily": "Circular-Book",
            "fontSize": 14,
            "margin": 0,
            "padding": 0,
          }
        }
        onChange={[Function]}
        onFocusToggle={[Function]}
        onInsertTopic={[Function]}
        placeholder="What else should we know?"
        submitting={false}
        value=""
      />
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Topics
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          topics={Array []}
        />
        <Text>
          Add topics.
        </Text>
      </ForwardRef>
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Post In
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <GroupsList
          RightIcon={[Function]}
          columns={1}
          groups={Array []}
          onPress={[Function]}
        />
        <Text>
          Select which groups to post in.
        </Text>
      </ForwardRef>
    </View>
  </ScrollView>
  <Toolbar
    announcementEnabled={false}
    showFilePicker={[Function]}
    showImagePicker={[Function]}
    toggleAnnoucement={[Function]}
  />
</KeyboardFriendlyView>
`;

exports[`PostEditor renders correctly while saving 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      onLayout={[Function]}
                    >
                      <RCTScrollView
                        keyboardDismissMode="on-drag"
                        keyboardShouldPersistTaps="handled"
                        onContentSizeChange={[Function]}
                      >
                        <View>
                          <View>
                            <Text>
                              What are you posting today?
                            </Text>
                            <View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  DISCUSSION
                                </Text>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  REQUEST
                                </Text>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  OFFER
                                </Text>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  RESOURCE
                                </Text>
                              </View>
                            </View>
                            <Text>
                              Title
                            </Text>
                            <View>
                              <TextInput
                                allowFontScaling={true}
                                editable={true}
                                maxLength={100}
                                onChangeText={[Function]}
                                placeholder="What do you want to discuss?"
                                placeholderTextColor="#c0c6cd"
                                rejectResponderTermination={true}
                                underlineColorAndroid="transparent"
                                value=""
                              />
                            </View>
                            <Text>
                              Details
                            </Text>
                            <View
                              onBlur={[Function]}
                              onFocus={[Function]}
                            >
                              <View>
                                <TextInput
                                  allowFontScaling={true}
                                  editable={true}
                                  multiline={true}
                                  onChangeText={[Function]}
                                  onSelectionChange={[Function]}
                                  placeholder="What else should we know?"
                                  placeholderTextColor="#c0c6cd"
                                  rejectResponderTermination={true}
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                                <View>
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    hitSlop={
                                      Object {
                                        "bottom": 7,
                                        "left": 7,
                                        "right": 7,
                                        "top": 7,
                                      }
                                    }
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                  >
                                    <Text>
                                      @
                                    </Text>
                                  </View>
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    hitSlop={
                                      Object {
                                        "bottom": 7,
                                        "left": 7,
                                        "right": 7,
                                        "top": 7,
                                      }
                                    }
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                  >
                                    <Text>
                                      #
                                    </Text>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                hitSlop={
                                  Object {
                                    "bottom": 10,
                                    "left": 10,
                                    "right": 10,
                                    "top": 5,
                                  }
                                }
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text
                                  allowFontScaling={false}
                                  style={
                                    Array [
                                      Object {
                                        "color": undefined,
                                        "fontSize": 26,
                                      },
                                      undefined,
                                      Object {
                                        "fontFamily": "Material Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      Object {},
                                    ]
                                  }
                                >
                                  
                                </Text>
                              </View>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  Topics
                                </Text>
                                <View>
                                  <Icon
                                    name="Plus"
                                  />
                                </View>
                              </View>
                              <Text>
                                Add topics.
                              </Text>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  Post In
                                </Text>
                                <View>
                                  <Icon
                                    name="Plus"
                                  />
                                </View>
                              </View>
                              <View>
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <Image
                                    source={
                                      Object {
                                        "uri": "https://d3ngex8q79bk55.cloudfront.net/misc/default_community_avatar.png",
                                      }
                                    }
                                  />
                                  <Text
                                    numberOfLines={1}
                                  >
                                    Group 1
                                  </Text>
                                  <Icon
                                    name="Ex"
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                      <View>
                        <View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <Icon
                              name="Paperclip"
                            />
                          </View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <Icon
                              name="AddImage"
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`PostEditor renders correctly while saving 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      onLayout={[Function]}
                    >
                      <RCTScrollView
                        keyboardDismissMode="on-drag"
                        keyboardShouldPersistTaps="handled"
                        onContentSizeChange={[Function]}
                      >
                        <View>
                          <View>
                            <Text>
                              What are you posting today?
                            </Text>
                            <View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  DISCUSSION
                                </Text>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  REQUEST
                                </Text>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  OFFER
                                </Text>
                              </View>
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  RESOURCE
                                </Text>
                              </View>
                            </View>
                            <Text>
                              Title
                            </Text>
                            <View>
                              <TextInput
                                allowFontScaling={true}
                                editable={false}
                                maxLength={100}
                                onChangeText={[Function]}
                                placeholder="What do you need help with?"
                                placeholderTextColor="#c0c6cd"
                                rejectResponderTermination={true}
                                underlineColorAndroid="transparent"
                                value=""
                              />
                            </View>
                            <Text>
                              Details
                            </Text>
                            <View
                              onBlur={[Function]}
                              onFocus={[Function]}
                            >
                              <View>
                                <TextInput
                                  allowFontScaling={true}
                                  editable={false}
                                  multiline={true}
                                  onChangeText={[Function]}
                                  onSelectionChange={[Function]}
                                  placeholder="What else should we know?"
                                  placeholderTextColor="#c0c6cd"
                                  rejectResponderTermination={true}
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                                <View>
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    hitSlop={
                                      Object {
                                        "bottom": 7,
                                        "left": 7,
                                        "right": 7,
                                        "top": 7,
                                      }
                                    }
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                  >
                                    <Text>
                                      @
                                    </Text>
                                  </View>
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    hitSlop={
                                      Object {
                                        "bottom": 7,
                                        "left": 7,
                                        "right": 7,
                                        "top": 7,
                                      }
                                    }
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                  >
                                    <Text>
                                      #
                                    </Text>
                                  </View>
                                </View>
                              </View>
                              <View>
                                <ActivityIndicator
                                  animating={true}
                                  color="#999999"
                                  hidesWhenStopped={true}
                                  size="small"
                                />
                              </View>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  Topics
                                </Text>
                                <View>
                                  <Icon
                                    name="Plus"
                                  />
                                </View>
                              </View>
                              <Text>
                                Add topics.
                              </Text>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  Start Time
                                </Text>
                                <View>
                                  <Icon
                                    name="ArrowDown"
                                  />
                                </View>
                              </View>
                              <Text>
                                When does it start?
                              </Text>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  End Time
                                </Text>
                                <View>
                                  <Icon
                                    name="ArrowDown"
                                  />
                                </View>
                              </View>
                              <Text>
                                When does it end?
                              </Text>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  Location
                                </Text>
                                <View>
                                  <Icon
                                    name="Plus"
                                  />
                                </View>
                              </View>
                              <Text>
                                Select a Location
                              </Text>
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <Text>
                                  Post In
                                </Text>
                                <View>
                                  <Icon
                                    name="Plus"
                                  />
                                </View>
                              </View>
                              <View>
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <Image
                                    source={
                                      Object {
                                        "uri": "https://d3ngex8q79bk55.cloudfront.net/misc/default_community_avatar.png",
                                      }
                                    }
                                  />
                                  <Text
                                    numberOfLines={1}
                                  >
                                    Group 1
                                  </Text>
                                  <Icon
                                    name="Ex"
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                      <View>
                        <View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <Icon
                              name="Paperclip"
                            />
                          </View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <Icon
                              name="AddImage"
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`PostEditor renders with a post 1`] = `
<KeyboardFriendlyView>
  <ScrollView
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
  >
    <View>
      <React.Fragment>
        <Text>
          What are you posting today?
        </Text>
        <View>
          <TypeButton
            onPress={[Function]}
            selected={true}
            type="discussion"
          />
          <TypeButton
            onPress={[Function]}
            selected={false}
            type="request"
          />
          <TypeButton
            onPress={[Function]}
            selected={false}
            type="offer"
          />
          <TypeButton
            onPress={[Function]}
            selected={false}
            type="resource"
          />
        </View>
      </React.Fragment>
      <Text>
        Title
      </Text>
      <View>
        <Component
          allowFontScaling={true}
          editable={true}
          maxLength={100}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          rejectResponderTermination={true}
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <Text>
        Details
      </Text>
      <withNavigation(InlineEditor)
        autoGrow={false}
        editable={true}
        inputStyle={
          Object {
            "fontFamily": "Circular-Book",
            "fontSize": 14,
            "margin": 0,
            "padding": 0,
          }
        }
        onChange={[Function]}
        onFocusToggle={[Function]}
        onInsertTopic={[Function]}
        placeholder="What else should we know?"
        submitting={false}
        value=""
      />
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Topics
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          topics={Array []}
        />
        <Text>
          Add topics.
        </Text>
      </ForwardRef>
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Post In
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <GroupsList
          RightIcon={[Function]}
          columns={1}
          groups={
            Array [
              Object {
                "id": 1,
                "name": "Group 1",
              },
            ]
          }
          onPress={[Function]}
        />
      </ForwardRef>
      <View>
        <Text>
          Images
        </Text>
        <ImageSelector
          imageUrls={
            Array [
              "http://foo.com/foo.png",
              "http://baz.com/baz.png",
            ]
          }
          onAdd={[Function]}
          onRemove={[Function]}
          type="post"
        />
      </View>
    </View>
  </ScrollView>
  <Toolbar
    announcementEnabled={false}
    post={
      Object {
        "details": "myDetails",
        "groups": Array [
          Object {
            "id": 1,
            "name": "Group 1",
          },
        ],
      }
    }
    showFilePicker={[Function]}
    showImagePicker={[Function]}
    toggleAnnoucement={[Function]}
  />
</KeyboardFriendlyView>
`;

exports[`TypeButton renders correctly 1`] = `
<ForwardRef
  onPress={[MockFunction]}
>
  <Text>
    DISCUSSION
  </Text>
</ForwardRef>
`;
