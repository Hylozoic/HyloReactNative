// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor renders a new editor correctly 1`] = `
<KeyboardAvoidingView
  behavior="padding"
  keyboardVerticalOffset={110}
>
  <ScrollView
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="never"
    overScrollMode="never"
  >
    <React.Fragment>
      <View>
        <View>
          <TextInput
            autoCorrect={false}
            blurOnSubmit={true}
            editable={true}
            maxLength={50}
            multiline={true}
            numberOfLines={2}
            onChangeText={[Function]}
            placeholder="What's on your mind?"
            placeholderTextColor="#c0c6cd"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <ForwardRef(HyloEditorWebView)
            customEditorCSS="
                min-height: 90px;
              "
            onAddTopic={[Function]}
            onChange={[Function]}
            placeholder="Add a description"
            readOnly={false}
            widthOffset={18}
          />
        </View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Topics
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <Topics
            onPress={[Function]}
            topics={[]}
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Location
            </Text>
            <View>
              <Icon
                name="ArrowDown"
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Post In
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <GroupsList
            RemoveIcon={[Function]}
            columns={1}
            groups={[]}
            onPress={[Function]}
            onRemove={[Function]}
          />
        </TouchableOpacity>
        <BottomBar
          announcementEnabled={false}
          onAddImage={[Function]}
          onShowFilePicker={[Function]}
          showAlert={[Function]}
          toggleAnnoucement={[Function]}
        />
      </View>
    </React.Fragment>
  </ScrollView>
</KeyboardAvoidingView>
`;

exports[`PostEditor renders with a post 1`] = `
<KeyboardAvoidingView
  behavior="padding"
  keyboardVerticalOffset={110}
>
  <ScrollView
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="never"
    overScrollMode="never"
  >
    <React.Fragment>
      <View>
        <View>
          <TextInput
            autoCorrect={false}
            blurOnSubmit={true}
            editable={true}
            maxLength={50}
            multiline={true}
            numberOfLines={2}
            onChangeText={[Function]}
            placeholder="What's on your mind?"
            placeholderTextColor="#c0c6cd"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <ForwardRef(HyloEditorWebView)
            contentHTML="myDetails"
            customEditorCSS="
                min-height: 90px;
              "
            onAddTopic={[Function]}
            onChange={[Function]}
            placeholder="Add a description"
            readOnly={false}
            widthOffset={18}
          />
        </View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Topics
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <Topics
            onPress={[Function]}
            topics={[]}
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Location
            </Text>
            <View>
              <Icon
                name="ArrowDown"
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Post In
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <GroupsList
            RemoveIcon={[Function]}
            columns={1}
            groups={
              [
                {
                  "id": 1,
                  "name": "Group 1",
                },
              ]
            }
            onPress={[Function]}
            onRemove={[Function]}
          />
        </TouchableOpacity>
        <BottomBar
          announcementEnabled={false}
          onAddImage={[Function]}
          onShowFilePicker={[Function]}
          post={
            {
              "details": "myDetails",
              "groups": [
                {
                  "id": 1,
                  "name": "Group 1",
                },
              ],
              "imageUrls": [
                "http://foo.com/foo.png",
                "http://baz.com/baz.png",
              ],
            }
          }
          showAlert={[Function]}
          toggleAnnoucement={[Function]}
        />
      </View>
      <ImageSelector
        images={
          [
            {
              "local": "http://foo.com/foo.png",
              "remote": "http://foo.com/foo.png",
            },
            {
              "local": "http://baz.com/baz.png",
              "remote": "http://baz.com/baz.png",
            },
          ]
        }
        onAdd={[Function]}
        onRemove={[Function]}
        type="post"
      />
    </React.Fragment>
  </ScrollView>
</KeyboardAvoidingView>
`;

exports[`TypeButton renders correctly 1`] = `
<View>
  <RNPickerSelect
    Icon={[Function]}
    InputAccessoryView={null}
    disabled={false}
    doneText="Done"
    fixAndroidTouchableBug={false}
    itemKey={null}
    items={
      [
        {
          "color": "#40A1DD",
          "label": "DISCUSSION",
          "value": "discussion",
        },
        {
          "color": "#664BA5",
          "label": "REQUEST",
          "value": "request",
        },
        {
          "color": "#0DC39F",
          "label": "OFFER",
          "value": "offer",
        },
        {
          "color": "#FFD403",
          "label": "RESOURCE",
          "value": "resource",
        },
        {
          "color": "#FC8000",
          "label": "PROJECT",
          "value": "project",
        },
        {
          "color": "#FE4850",
          "label": "EVENT",
          "value": "event",
        },
      ]
    }
    modalProps={{}}
    onClose={null}
    onDonePress={null}
    onDownArrow={null}
    onOpen={null}
    onUpArrow={null}
    onValueChange={[MockFunction]}
    pickerProps={
      {
        "itemStyle": {
          "backgroundColor": "#FFFFFF",
          "fontSize": 20,
          "fontWeight": "bold",
          "letterSpacing": 2,
        },
      }
    }
    placeholder={
      {
        "color": "#9EA0A4",
        "label": "Select an item...",
        "value": null,
      }
    }
    style={{}}
    textInputProps={{}}
    touchableDoneProps={{}}
    touchableWrapperProps={{}}
    useNativeAndroidPickerStyle={false}
    value="discussion"
  />
</View>
`;
