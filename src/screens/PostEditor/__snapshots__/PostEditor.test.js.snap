// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor renders a new editor correctly 1`] = `
<KeyboardAvoidingView
  behavior="padding"
  keyboardVerticalOffset={110}
>
  <ScrollView
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="never"
    overScrollMode="never"
  >
    <View>
      <View>
        <View>
          <TextInput
            autoCorrect={false}
            blurOnSubmit={true}
            editable={true}
            maxLength={50}
            multiline={true}
            numberOfLines={2}
            onChangeText={[Function]}
            placeholder="Create a post"
            placeholderTextColor="#c0c6cd"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <ForwardRef(HyloEditorWebView)
            customEditorCSS="
                min-height: 90px;
              "
            onAddTopic={[Function]}
            onChange={[Function]}
            placeholder="Add a description"
            readOnly={false}
            widthOffset={0}
          />
        </View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Topics
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <Topics
            onPress={[Function]}
            onPressRemove={[Function]}
            pillStyle={
              {
                "marginTop": 5,
              }
            }
            textStyle={
              {
                "fontSize": 14,
              }
            }
            topics={[]}
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Location
            </Text>
            <View>
              <Icon
                name="ArrowDown"
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Post In
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <GroupsList
            RemoveIcon={[Function]}
            columns={1}
            groups={[]}
            onPress={[Function]}
            onRemove={[Function]}
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Location
            </Text>
            <View>
              <Icon
                name="ArrowDown"
              />
            </View>
          </View>
        </TouchableOpacity>
      </View>
      <View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <View>
              <Icon
                color="#56667a"
                name="Public"
              />
              <Text>
                Make Public
              </Text>
            </View>
            <View>
              <Switch
                onValueChange={[Function]}
                trackColor={
                  {
                    "false": "#56667a",
                    "true": "#0DC39F",
                  }
                }
                value={false}
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <View>
              <Icon
                color="#56667a"
                name="Announcement"
              />
              <Text>
                Announcement?
              </Text>
            </View>
            <View>
              <Switch
                onValueChange={[Function]}
                trackColor={
                  {
                    "false": "#56667a",
                    "true": "#0DC39F",
                  }
                }
                value={false}
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity>
          <View>
            <View>
              <Icon
                color="#56667a"
                name="AddImage"
              />
              <Text>
                Images
              </Text>
            </View>
            <View>
              <Memo(Connect(ImagePicker))
                onChoice={[Function]}
                onError={[Function]}
                renderPicker={[Function]}
                selectionLimit={10}
                type="post"
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <View>
              <Icon
                color="#56667a"
                name="Paperclip"
              />
              <Text>
                Files
              </Text>
            </View>
            <View>
              <TouchableOpacity
                onPress={[Function]}
              >
                <Icon
                  name="Plus"
                />
              </TouchableOpacity>
            </View>
          </View>
        </TouchableOpacity>
      </View>
    </View>
  </ScrollView>
</KeyboardAvoidingView>
`;

exports[`PostEditor renders correctly while saving 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={0}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={true}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="no-hide-descendants"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "none",
                  "overflow": "hidden",
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                      >
                        <RCTScrollView
                          keyboardDismissMode="interactive"
                          keyboardShouldPersistTaps="never"
                          overScrollMode="never"
                        >
                          <View>
                            <View>
                              <View>
                                <View>
                                  <TextInput
                                    autoCorrect={false}
                                    blurOnSubmit={true}
                                    editable={false}
                                    maxLength={50}
                                    multiline={true}
                                    numberOfLines={2}
                                    onChangeText={[Function]}
                                    placeholder="Create a post"
                                    placeholderTextColor="#c0c6cd"
                                    underlineColorAndroid="transparent"
                                    value="title of this post"
                                  />
                                </View>
                                <View>
                                  <View>
                                    <ActivityIndicator
                                      accessibilityHint="loading"
                                      color="#818A88"
                                      size="small"
                                    />
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <Text>
                                      Topics
                                    </Text>
                                    <View>
                                      <Icon
                                        name="Plus"
                                      />
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <Text>
                                      Location
                                    </Text>
                                    <View>
                                      <Icon
                                        name="ArrowDown"
                                      />
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <Text>
                                      Post In
                                    </Text>
                                    <View>
                                      <Icon
                                        name="Plus"
                                      />
                                    </View>
                                  </View>
                                  <View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <View
                                          style={
                                            [
                                              {
                                                "overflow": "hidden",
                                              },
                                              undefined,
                                            ]
                                          }
                                        >
                                          <FastImageView
                                            defaultSource={null}
                                            resizeMode="cover"
                                            source={
                                              {
                                                "uri": "https://d3ngex8q79bk55.cloudfront.net/misc/default_community_avatar.png",
                                              }
                                            }
                                            style={
                                              {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "absolute",
                                                "right": 0,
                                                "top": 0,
                                              }
                                            }
                                          />
                                        </View>
                                        <Text
                                          numberOfLines={1}
                                        >
                                          Group 1
                                        </Text>
                                        <View
                                          accessibilityState={
                                            {
                                              "busy": undefined,
                                              "checked": undefined,
                                              "disabled": undefined,
                                              "expanded": undefined,
                                              "selected": undefined,
                                            }
                                          }
                                          accessibilityValue={
                                            {
                                              "max": undefined,
                                              "min": undefined,
                                              "now": undefined,
                                              "text": undefined,
                                            }
                                          }
                                          accessible={true}
                                          collapsable={false}
                                          focusable={true}
                                          hitSlop={
                                            {
                                              "bottom": 5,
                                              "left": 5,
                                              "right": 5,
                                              "top": 5,
                                            }
                                          }
                                          onClick={[Function]}
                                          onResponderGrant={[Function]}
                                          onResponderMove={[Function]}
                                          onResponderRelease={[Function]}
                                          onResponderTerminate={[Function]}
                                          onResponderTerminationRequest={[Function]}
                                          onStartShouldSetResponder={[Function]}
                                        >
                                          <Icon
                                            name="Ex"
                                          />
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <Text>
                                      Location
                                    </Text>
                                    <View>
                                      <Icon
                                        name="ArrowDown"
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <View>
                                      <Icon
                                        color="#56667a"
                                        name="Public"
                                      />
                                      <Text>
                                        Make Public
                                      </Text>
                                    </View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Text>
                                          false
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <View>
                                      <Icon
                                        color="#56667a"
                                        name="Announcement"
                                      />
                                      <Text>
                                        Announcement?
                                      </Text>
                                    </View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Text>
                                          false
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={false}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <View>
                                      <Icon
                                        color="#56667a"
                                        name="AddImage"
                                      />
                                      <Text>
                                        Images
                                      </Text>
                                    </View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        hitSlop={
                                          {
                                            "bottom": 5,
                                            "left": 5,
                                            "right": 5,
                                            "top": 5,
                                          }
                                        }
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Icon
                                          name="Plus"
                                        />
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                >
                                  <View>
                                    <View>
                                      <Icon
                                        color="#56667a"
                                        name="Paperclip"
                                      />
                                      <Text>
                                        Files
                                      </Text>
                                    </View>
                                    <View>
                                      <View
                                        accessibilityState={
                                          {
                                            "busy": undefined,
                                            "checked": undefined,
                                            "disabled": undefined,
                                            "expanded": undefined,
                                            "selected": undefined,
                                          }
                                        }
                                        accessibilityValue={
                                          {
                                            "max": undefined,
                                            "min": undefined,
                                            "now": undefined,
                                            "text": undefined,
                                          }
                                        }
                                        accessible={true}
                                        collapsable={false}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                      >
                                        <Icon
                                          name="Plus"
                                        />
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                    >
                      <View
                        accessibilityElementsHidden={true}
                        importantForAccessibility="no-hide-descendants"
                        onLayout={[Function]}
                        pointerEvents="none"
                        style={null}
                      >
                        <View>
                          <View>
                            <View
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessibilityValue={
                                {
                                  "max": undefined,
                                  "min": undefined,
                                  "now": undefined,
                                  "text": undefined,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={
                                {
                                  "bottom": 7,
                                  "left": 7,
                                  "right": 7,
                                  "top": 7,
                                }
                              }
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <Icon
                                color="#c0c6cd"
                                name="Ex"
                              />
                            </View>
                            <View>
                              <View>
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  testID="ios_touchable_wrapper"
                                >
                                  <View
                                    pointerEvents="box-only"
                                  >
                                    <TextInput
                                      editable={false}
                                      testID="text_input"
                                      value="DISCUSSION"
                                    />
                                    <View
                                      testID="icon_container"
                                    >
                                      <Icon
                                        name="ArrowDown"
                                      />
                                    </View>
                                  </View>
                                </View>
                                <Modal
                                  hardwareAccelerated={false}
                                  onOrientationChange={[Function]}
                                  supportedOrientations={
                                    [
                                      "portrait",
                                      "landscape",
                                    ]
                                  }
                                  testID="ios_modal"
                                  transparent={true}
                                  visible={false}
                                />
                              </View>
                            </View>
                            <View>
                              <View
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": true,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View>
                                  <View>
                                    <Text>
                                      Saving-ellipsis
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                  "marginTop": 44,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  accessibilityLabel="MockedScreen, back"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Image
                    fadeDuration={0}
                    source={
                      {
                        "process": [Function],
                      }
                    }
                    style={
                      [
                        {
                          "height": 21,
                          "marginLeft": 8,
                          "marginRight": 22,
                          "marginVertical": 12,
                          "resizeMode": "contain",
                          "transform": [
                            {
                              "scaleX": 1,
                            },
                          ],
                          "width": 13,
                        },
                        {
                          "marginRight": 6,
                        },
                        {
                          "tintColor": "rgb(0, 122, 255)",
                        },
                      ]
                    }
                  />
                  <View
                    style={
                      [
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "row",
                        },
                        {
                          "minWidth": 133,
                        },
                      ]
                    }
                  >
                    <Text
                      accessible={false}
                      allowFontScaling={false}
                      collapsable={false}
                      numberOfLines={1}
                      onLayout={[Function]}
                      style={
                        {
                          "color": "rgb(0, 122, 255)",
                          "fontSize": 17,
                          "letterSpacing": 0.35,
                        }
                      }
                    >
                      MockedScreen
                    </Text>
                  </View>
                </View>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 160,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  Post Details
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`PostEditor renders with a post 1`] = `
<KeyboardAvoidingView
  behavior="padding"
  keyboardVerticalOffset={110}
>
  <ScrollView
    keyboardDismissMode="interactive"
    keyboardShouldPersistTaps="never"
    overScrollMode="never"
  >
    <View>
      <View>
        <View>
          <TextInput
            autoCorrect={false}
            blurOnSubmit={true}
            editable={true}
            maxLength={50}
            multiline={true}
            numberOfLines={2}
            onChangeText={[Function]}
            placeholder="Create a post"
            placeholderTextColor="#c0c6cd"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <ForwardRef(HyloEditorWebView)
            contentHTML="myDetails"
            customEditorCSS="
                min-height: 90px;
              "
            onAddTopic={[Function]}
            onChange={[Function]}
            placeholder="Add a description"
            readOnly={false}
            widthOffset={0}
          />
        </View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Topics
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <Topics
            onPress={[Function]}
            onPressRemove={[Function]}
            pillStyle={
              {
                "marginTop": 5,
              }
            }
            textStyle={
              {
                "fontSize": 14,
              }
            }
            topics={[]}
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Location
            </Text>
            <View>
              <Icon
                name="ArrowDown"
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Post In
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <GroupsList
            RemoveIcon={[Function]}
            columns={1}
            groups={
              [
                {
                  "id": 1,
                  "name": "Group 1",
                },
              ]
            }
            onPress={[Function]}
            onRemove={[Function]}
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <Text>
              Location
            </Text>
            <View>
              <Icon
                name="ArrowDown"
              />
            </View>
          </View>
        </TouchableOpacity>
      </View>
      <View>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <View>
              <Icon
                color="#56667a"
                name="Public"
              />
              <Text>
                Make Public
              </Text>
            </View>
            <View>
              <Switch
                onValueChange={[Function]}
                trackColor={
                  {
                    "false": "#56667a",
                    "true": "#0DC39F",
                  }
                }
                value={false}
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <View>
              <Icon
                color="#56667a"
                name="Announcement"
              />
              <Text>
                Announcement?
              </Text>
            </View>
            <View>
              <Switch
                onValueChange={[Function]}
                trackColor={
                  {
                    "false": "#56667a",
                    "true": "#0DC39F",
                  }
                }
                value={false}
              />
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity>
          <View>
            <View>
              <Icon
                color="#56667a"
                name="AddImage"
              />
              <Text>
                Images
              </Text>
            </View>
            <View>
              <Memo(Connect(ImagePicker))
                onChoice={[Function]}
                onError={[Function]}
                renderPicker={[Function]}
                selectionLimit={10}
                type="post"
              />
            </View>
          </View>
          <ImageSelector
            images={
              [
                {
                  "local": "http://foo.com/foo.png",
                  "remote": "http://foo.com/foo.png",
                },
                {
                  "local": "http://baz.com/baz.png",
                  "remote": "http://baz.com/baz.png",
                },
              ]
            }
            onAdd={[Function]}
            onRemove={[Function]}
            type="post"
          />
        </TouchableOpacity>
        <TouchableOpacity
          onPress={[Function]}
        >
          <View>
            <View>
              <Icon
                color="#56667a"
                name="Paperclip"
              />
              <Text>
                Files
              </Text>
            </View>
            <View>
              <TouchableOpacity
                onPress={[Function]}
              >
                <Icon
                  name="Plus"
                />
              </TouchableOpacity>
            </View>
          </View>
        </TouchableOpacity>
      </View>
    </View>
  </ScrollView>
</KeyboardAvoidingView>
`;

exports[`TypeButton renders correctly 1`] = `
<View>
  <RNPickerSelect
    Icon={[Function]}
    InputAccessoryView={null}
    darkTheme={false}
    disabled={false}
    doneText="Done"
    fixAndroidTouchableBug={false}
    itemKey={null}
    items={
      [
        {
          "color": "#40A1DD",
          "label": "DISCUSSION",
          "value": "discussion",
        },
        {
          "color": "#0DC39F",
          "label": "REQUEST",
          "value": "request",
        },
        {
          "color": "#0DC39F",
          "label": "OFFER",
          "value": "offer",
        },
        {
          "color": "#FFD403",
          "label": "RESOURCE",
          "value": "resource",
        },
        {
          "color": "#FC8000",
          "label": "PROJECT",
          "value": "project",
        },
        {
          "color": "#FE4850",
          "label": "EVENT",
          "value": "event",
        },
      ]
    }
    modalProps={{}}
    onClose={null}
    onDonePress={null}
    onDownArrow={null}
    onOpen={null}
    onUpArrow={null}
    onValueChange={[MockFunction]}
    pickerProps={
      {
        "itemStyle": {
          "backgroundColor": "#FFFFFF",
          "fontSize": 20,
          "fontWeight": "bold",
          "letterSpacing": 2,
        },
      }
    }
    placeholder={
      {
        "color": "#9EA0A4",
        "label": "Select an item...",
        "value": null,
      }
    }
    style={{}}
    textInputProps={{}}
    touchableDoneProps={{}}
    touchableWrapperProps={{}}
    useNativeAndroidPickerStyle={false}
    value="discussion"
  />
</View>
`;
