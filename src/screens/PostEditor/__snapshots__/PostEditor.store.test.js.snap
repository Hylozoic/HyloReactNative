// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createPost should match the last snapshot 1`] = `
{
  "graphql": {
    "query": "mutation (
        $type: String
        $title: String
        $details: String
        $groupIds: [String]
        $startTime: Date
        $endTime: Date
        $location: String
        $locationId: ID
        $imageUrls: [String]
        $fileUrls: [String]
        $announcement: Boolean
        $topicNames: [String]
        $memberIds: [ID]        
      ) {
        createPost(data: {
          type: $type
          title: $title
          details: $details
          groupIds: $groupIds
          startTime: $startTime
          endTime: $endTime
          location: $location
          locationId: $locationId
          imageUrls: $imageUrls
          fileUrls: $fileUrls
          announcement: $announcement
          topicNames: $topicNames
          memberIds: $memberIds
        }) {
          
  id
  announcement
  title
  details
  type
  creator {
    id
    name
    avatarUrl
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  donationsLink
  projectManagementLink
  myEventResponse
  commenters(first: 20) {
    id
    name
    avatarUrl
  }
  commentersTotal
  
  linkPreview {
    description
    id
    imageUrl
    title
    url
  }
  linkPreviewFeatured
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  votesTotal
  myVote
  groups {
    id
    name
    slug
  }
  attachments {
    type
    url
    position
    id
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    total
    hasMore
    items {
      id
      name
      avatarUrl
      bio
      tagline
      location
    }
  }
  eventInvitations {
    total
    hasMore
    items {
      id
      response
      person {
        id
        name
        avatarUrl
        bio
        tagline
        location
      }
    }
  }

        }
      }",
    "variables": {
      "announcement": undefined,
      "details": "details",
      "endTime": "endTime",
      "fileUrls": [],
      "groupIds": [
        undefined,
      ],
      "imageUrls": [],
      "location": undefined,
      "locationId": undefined,
      "memberIds": [],
      "startTime": "startTime",
      "title": "title",
      "topicNames": [],
      "type": "post",
    },
  },
  "meta": {
    "analytics": {
      "detailsLength": 7,
      "eventName": "Post Created",
      "isAnnouncement": undefined,
    },
    "extractModel": {
      "getRoot": [Function],
      "modelName": "Post",
    },
  },
  "type": "CREATE_POST",
}
`;

exports[`createProject should match the last snapshot 1`] = `
{
  "graphql": {
    "query": "mutation (
        $type: String
        $title: String
        $details: String
        $groupIds: [String]
        $startTime: Date
        $endTime: Date
        $location: String
        $locationId: ID
        $imageUrls: [String]
        $fileUrls: [String]
        $announcement: Boolean
        $topicNames: [String]
        $memberIds: [ID]        
      ) {
        createPost(data: {
          type: $type
          title: $title
          details: $details
          groupIds: $groupIds
          startTime: $startTime
          endTime: $endTime
          location: $location
          locationId: $locationId
          imageUrls: $imageUrls
          fileUrls: $fileUrls
          announcement: $announcement
          topicNames: $topicNames
          memberIds: $memberIds
        }) {
          
  id
  announcement
  title
  details
  type
  creator {
    id
    name
    avatarUrl
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  donationsLink
  projectManagementLink
  myEventResponse
  commenters(first: 20) {
    id
    name
    avatarUrl
  }
  commentersTotal
  
  linkPreview {
    description
    id
    imageUrl
    title
    url
  }
  linkPreviewFeatured
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  votesTotal
  myVote
  groups {
    id
    name
    slug
  }
  attachments {
    type
    url
    position
    id
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    total
    hasMore
    items {
      id
      name
      avatarUrl
      bio
      tagline
      location
    }
  }
  eventInvitations {
    total
    hasMore
    items {
      id
      response
      person {
        id
        name
        avatarUrl
        bio
        tagline
        location
      }
    }
  }

        }
      }",
    "variables": {
      "announcement": undefined,
      "details": "details",
      "endTime": "endTime",
      "fileUrls": [],
      "groupIds": [
        undefined,
      ],
      "imageUrls": [],
      "location": undefined,
      "locationId": undefined,
      "memberIds": [
        1,
        2,
        3,
      ],
      "startTime": "startTime",
      "title": "title",
      "topicNames": [],
      "type": "post",
    },
  },
  "meta": {
    "analytics": {
      "detailsLength": 7,
      "eventName": "Post Created",
      "isAnnouncement": undefined,
    },
    "extractModel": {
      "getRoot": [Function],
      "modelName": "Post",
    },
  },
  "type": "CREATE_POST",
}
`;

exports[`updatePost should match the last snapshot 1`] = `
{
  "graphql": {
    "query": "mutation ($id: ID
        $type: String
        $title: String
        $details: String
        $groupIds: [String]
        $startTime: Date
        $endTime: Date
        $location: String
        $locationId: ID
        $imageUrls: [String]
        $fileUrls: [String]
        $topicNames: [String]
        $memberIds: [ID]        
      ) {
        updatePost(id: $id, data: {
          type: $type
          title: $title
          details: $details
          groupIds: $groupIds
          startTime: $startTime
          endTime: $endTime
          location: $location
          locationId: $locationId
          imageUrls: $imageUrls
          fileUrls: $fileUrls
          topicNames: $topicNames
          memberIds: $memberIds
        }) {
          
  id
  announcement
  title
  details
  type
  creator {
    id
    name
    avatarUrl
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  donationsLink
  projectManagementLink
  myEventResponse
  commenters(first: 20) {
    id
    name
    avatarUrl
  }
  commentersTotal
  comments(first: 10, order: "desc") {
    items {
      
  id
  text
  creator {
    id
    name
    avatarUrl
  }
  attachments {
    id
    position
    type
    url
  }
  parentComment {
    id
  }
  createdAt

      childComments(first: 4, order: "desc") {
        items {
          
  id
  text
  creator {
    id
    name
    avatarUrl
  }
  attachments {
    id
    position
    type
    url
  }
  parentComment {
    id
  }
  createdAt

          post {
            id
          }
        }
        total
        hasMore
      }
    }
    total
    hasMore
  }
  linkPreview {
    description
    id
    imageUrl
    title
    url
  }
  linkPreviewFeatured
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  votesTotal
  myVote
  groups {
    id
    name
    slug
  }
  attachments {
    type
    url
    position
    id
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    total
    hasMore
    items {
      id
      name
      avatarUrl
      bio
      tagline
      location
    }
  }
  eventInvitations {
    total
    hasMore
    items {
      id
      response
      person {
        id
        name
        avatarUrl
        bio
        tagline
        location
      }
    }
  }

        }
      }",
    "variables": {
      "details": "details",
      "endTime": "endTime",
      "fileUrls": [],
      "groupIds": [
        undefined,
      ],
      "id": 1,
      "imageUrls": [],
      "location": undefined,
      "locationId": undefined,
      "memberIds": [],
      "startTime": "startTime",
      "title": "title",
      "topicNames": [],
      "type": "post",
    },
  },
  "meta": {
    "analytics": {
      "detailsLength": 7,
      "eventName": "Post Updated",
    },
    "extractModel": {
      "append": false,
      "getRoot": [Function],
      "modelName": "Post",
    },
  },
  "type": "UPDATE_POST",
}
`;
