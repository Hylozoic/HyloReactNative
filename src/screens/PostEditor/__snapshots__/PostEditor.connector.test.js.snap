// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor mapDispatchToProps maps the action generators 1`] = `
{
  "createPost": [Function],
  "createProject": [Function],
  "fetchPost": [Function],
  "pollingFindOrCreateLocation": [Function],
  "updatePost": [Function],
  "upload": [Function],
}
`;

exports[`PostEditor mapDispatchToProps maps the action generators 2`] = `
[
  [
    {
      "graphql": {
        "query": "query ($id: ID) {
  post(id: $id) {
    
  id
  announcement
  title
  details
  type
  creator {
    id
    name
    avatarUrl
    groupRoles {
      name
      emoji
      active
      groupId
    }
    moderatedGroupMemberships {
      groupId
    }
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  donationsLink
  projectManagementLink
  myEventResponse
  commenters(first: 20) {
    id
    name
    avatarUrl
  }
  commentersTotal
  commentsTotal
  comments(first: 10, order: "desc") {
    items {
      
  id
  text
  creator {
    id
    name
    avatarUrl
    groupRoles {
      name
      emoji
      active
      groupId
    }
    moderatedGroupMemberships {
      groupId
    }
  }
  attachments {
    id
    position
    type
    url
  }
  parentComment {
    id
  }
  myReactions {
    emojiFull
    id
  }
  commentReactions {
    emojiFull
    id
    user {
      id
      name
    }
  }
  createdAt

      childComments(first: 4, order: "desc") {
        items {
          
  id
  text
  creator {
    id
    name
    avatarUrl
    groupRoles {
      name
      emoji
      active
      groupId
    }
    moderatedGroupMemberships {
      groupId
    }
  }
  attachments {
    id
    position
    type
    url
  }
  parentComment {
    id
  }
  myReactions {
    emojiFull
    id
  }
  commentReactions {
    emojiFull
    id
    user {
      id
      name
    }
  }
  createdAt

          post {
            id
          }
        }
        total
        hasMore
      }
    }
    total
    hasMore
  }
  linkPreview {
    description
    id
    imageUrl
    title
    url
  }
  linkPreviewFeatured
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  votesTotal
  peopleReactedTotal
  myReactions {
    emojiFull
    id
  }
  postReactions {
    emojiFull
    id
    user {
      id
      name
    }
  }
  groups {
    id
    name
    slug
  }
  attachments {
    type
    url
    position
    id
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    total
    hasMore
    items {
      id
      name
      avatarUrl
      bio
      tagline
      location
    }
  }
  eventInvitations {
    total
    hasMore
    items {
      id
      response
      person {
        id
        name
        avatarUrl
        bio
        tagline
        location
      }
    }
  }

  }
}",
        "variables": {
          "id": 1,
        },
      },
      "meta": {
        "afterInteractions": true,
        "extractModel": "Post",
        "extractQueryResults": {
          "getItems": [Function],
          "getType": [Function],
        },
      },
      "type": "FETCH_POST",
    },
  ],
]
`;

exports[`PostEditor mapStateToProps maps 1`] = `
{
  "canModerate": undefined,
  "groupOptions": [
    {
      "id": "7",
    },
  ],
  "mapCoordinate": undefined,
  "post": {
    "attachments": [
      SessionBoundModel {
        "_fields": {
          "id": "3",
          "position": 0,
          "post": "1",
          "type": "image",
          "url": "bar.png",
        },
      },
      SessionBoundModel {
        "_fields": {
          "id": "2",
          "position": 1,
          "post": "1",
          "type": "image",
          "url": "foo.png",
        },
      },
    ],
    "commenters": [],
    "creator": SessionBoundModel {
      "_fields": {
        "id": "10",
      },
    },
    "eventInvitations": [],
    "fileAttachments": [],
    "fileUrls": [],
    "groups": [
      SessionBoundModel {
        "_fields": {
          "id": "7",
        },
      },
      SessionBoundModel {
        "_fields": {
          "id": "8",
        },
      },
    ],
    "id": "1",
    "imageUrls": [
      "bar.png",
      "foo.png",
    ],
    "isPublic": undefined,
    "linkPreview": null,
    "location": undefined,
    "members": [],
    "pinned": undefined,
    "topics": [],
  },
  "postLoading": false,
}
`;
