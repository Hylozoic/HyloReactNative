// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default render matches snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
          >
            <View
              collapsable={false}
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                >
                  MockedScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
        >
          <View
            collapsable={false}
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                      >
                        <RCTScrollView
                          keyboardDismissMode="on-drag"
                          keyboardShouldPersistTaps="handled"
                        >
                          <View>
                            <View>
                              <Text>
                                Let's do this!
                              </Text>
                              <Text>
                                Hi 
                                <Text />
                                 we just need to know your name and password and you're account will be created.
                              </Text>
                            </View>
                            <View>
                              <View>
                                <Text>
                                  Your Full Name
                                </Text>
                                <TextInput
                                  editable={true}
                                  onChangeText={[Function]}
                                  onSubmitEditing={[Function]}
                                  returnKeyType="next"
                                  textContentType="oneTimeCode"
                                />
                              </View>
                              <View>
                                <Text>
                                  Password (at least 9 characters)
                                </Text>
                                <TextInput
                                  editable={true}
                                  onChangeText={[Function]}
                                  onSubmitEditing={[Function]}
                                  returnKeyType="next"
                                  secureTextEntry={true}
                                  textContentType="oneTimeCode"
                                />
                                <View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    hitSlop={
                                      {
                                        "bottom": 10,
                                        "left": 10,
                                        "right": 10,
                                        "top": 10,
                                      }
                                    }
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                  >
                                    <Text
                                      allowFontScaling={false}
                                      selectable={false}
                                      style={
                                        [
                                          {
                                            "color": undefined,
                                            "fontSize": 12,
                                          },
                                          undefined,
                                          {
                                            "fontFamily": "Entypo",
                                            "fontStyle": "normal",
                                            "fontWeight": "normal",
                                          },
                                          {},
                                        ]
                                      }
                                    >
                                      ï†–
                                    </Text>
                                  </View>
                                </View>
                              </View>
                              <View>
                                <Text>
                                  Confirm Password
                                </Text>
                                <TextInput
                                  editable={true}
                                  onChangeText={[Function]}
                                  onSubmitEditing={[Function]}
                                  returnKeyType="go"
                                  secureTextEntry={true}
                                  textContentType="oneTimeCode"
                                />
                                <View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    hitSlop={
                                      {
                                        "bottom": 10,
                                        "left": 10,
                                        "right": 10,
                                        "top": 10,
                                      }
                                    }
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                  >
                                    <Text
                                      allowFontScaling={false}
                                      selectable={false}
                                      style={
                                        [
                                          {
                                            "color": undefined,
                                            "fontSize": 12,
                                          },
                                          undefined,
                                          {
                                            "fontFamily": "Entypo",
                                            "fontStyle": "normal",
                                            "fontWeight": "normal",
                                          },
                                          {},
                                        ]
                                      }
                                    >
                                      ï†–
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                        <View>
                          <View>
                            <View
                              accessibilityState={
                                {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View>
                                <View>
                                  <Text>
                                    Continue
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </View>
</View>
`;
