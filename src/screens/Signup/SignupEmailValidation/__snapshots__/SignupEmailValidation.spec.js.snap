// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default render matches snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
      >
        <View
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          onLayout={[Function]}
          pointerEvents="none"
          style={
            {
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
          >
            <View
              collapsable={false}
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                >
                  SignupEmailValidation
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
              />
            </View>
          </View>
        </View>
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
          >
            <View
              collapsable={false}
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
              >
                <View
                  accessibilityLabel="SignupEmailValidation, back"
                  accessibilityRole="button"
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Image
                    fadeDuration={0}
                    source={
                      {
                        "testUri": "../../@react-navigation/elements/lib/commonjs/assets/back-icon.png",
                      }
                    }
                    style={
                      [
                        {
                          "height": 21,
                          "marginLeft": 8,
                          "marginRight": 22,
                          "marginVertical": 12,
                          "resizeMode": "contain",
                          "transform": [
                            {
                              "scaleX": 1,
                            },
                          ],
                          "width": 13,
                        },
                        {
                          "marginRight": 6,
                        },
                        {
                          "tintColor": "rgb(0, 122, 255)",
                        },
                      ]
                    }
                  />
                  <View
                    style={
                      [
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "row",
                        },
                        {
                          "minWidth": 133,
                        },
                      ]
                    }
                  >
                    <Text
                      accessible={false}
                      allowFontScaling={false}
                      collapsable={false}
                      numberOfLines={1}
                      onLayout={[Function]}
                    >
                      SignupEmailValidation
                    </Text>
                  </View>
                </View>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                >
                  Signup
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={1}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
        >
          <View
            collapsable={false}
          />
          <View
            accessibilityElementsHidden={true}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="no-hide-descendants"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": "hidden",
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
              >
                <View
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                      >
                        <RCTScrollView
                          keyboardDismissMode="on-drag"
                          keyboardShouldPersistTaps="handled"
                        >
                          <View>
                            <View>
                              <Text>
                                Check your email
                              </Text>
                              <View>
                                <Text>
                                  We've sent a 6 digit code to:
                                </Text>
                                <Text />
                                <Text>
                                  The code will expire shortly, so please enter it here soon.
                                </Text>
                              </View>
                            </View>
                            <View>
                              <View>
                                <Text
                                  onLayout={[Function]}
                                >
                                  <Text>
                                     
                                  </Text>
                                </Text>
                                <Text
                                  onLayout={[Function]}
                                >
                                  <Text>
                                     
                                  </Text>
                                </Text>
                                <Text
                                  onLayout={[Function]}
                                >
                                  <Text>
                                     
                                  </Text>
                                </Text>
                                <Text
                                  onLayout={[Function]}
                                >
                                  <Text>
                                     
                                  </Text>
                                </Text>
                                <Text
                                  onLayout={[Function]}
                                >
                                  <Text>
                                     
                                  </Text>
                                </Text>
                                <Text
                                  onLayout={[Function]}
                                >
                                  <Text>
                                     
                                  </Text>
                                </Text>
                                <TextInput
                                  autoCapitalize="characters"
                                  autoCorrect={false}
                                  blurOnSubmit={false}
                                  caretHidden={true}
                                  clearButtonMode="never"
                                  disableFullscreenUI={true}
                                  keyboardType="number-pad"
                                  maxLength={6}
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onPressOut={[Function]}
                                  spellCheck={false}
                                  textContentType="oneTimeCode"
                                  underlineColorAndroid="transparent"
                                />
                              </View>
                              <View
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <Text>
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      [
                                        {
                                          "color": undefined,
                                          "fontSize": 12,
                                        },
                                        undefined,
                                        {
                                          "fontFamily": "FontAwesome5Free-Solid",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        {
                                          "fontWeight": "900",
                                        },
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                   Resend code
                                </Text>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
        <RNSScreen
          activityState={1}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
        >
          <View
            collapsable={false}
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
              >
                <View
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </View>
</View>
`;
