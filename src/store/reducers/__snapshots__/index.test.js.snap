// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sets up the expected reducers 1`] = `
Object {
  "CommentEditor": Object {},
  "CreateCommunityFlow": Object {},
  "DeepLinkHandler": Object {},
  "FeedList": Object {
    "filter": null,
    "sortBy": "updated",
  },
  "LoadingModal": Object {
    "shouldDisplay": false,
  },
  "MemberFeed": Object {
    "choice": "Posts",
  },
  "Members": Object {
    "search": "",
    "sortBy": "join",
  },
  "ModeratorSettings": Array [],
  "NewMessage": Object {
    "message": "",
  },
  "PeopleTyping": Object {},
  "PostEditor": Object {},
  "SearchPage": Object {
    "filter": "all",
    "search": "",
  },
  "SignupFlow": Object {
    "errors": Object {},
    "userSettings": Object {
      "avatarUrl": "",
      "confirmPassword": "",
      "email": "",
      "location": "",
      "name": "",
      "password": "",
      "settings": Object {},
    },
  },
  "SkillEditor": Object {
    "skill": "",
    "userSkills": Array [],
  },
  "SocketListener": Object {},
  "TabBar": Object {
    "isVisible": true,
  },
  "Topics": Object {
    "term": "",
  },
  "currentNetworkAndCommunity": Object {
    "communityId": null,
    "networkId": null,
  },
  "mixpanel": MixpanelInstance {
    "addGroup": [MockFunction],
    "addPushDeviceToken": [MockFunction],
    "alias": [MockFunction],
    "append": [MockFunction],
    "clearPushRegistrationId": [MockFunction],
    "clearSuperProperties": [MockFunction],
    "disableIpAddressGeolocalization": [MockFunction],
    "flush": [MockFunction],
    "getDistinctId": [MockFunction],
    "getPushRegistrationId": [MockFunction],
    "getSuperProperty": [MockFunction],
    "identify": [MockFunction],
    "increment": [MockFunction],
    "initPushHandling": [MockFunction],
    "initialize": [MockFunction],
    "optInTracking": [MockFunction],
    "optOutTracking": [MockFunction],
    "registerSuperProperties": [MockFunction],
    "registerSuperPropertiesOnce": [MockFunction],
    "removeAllPushDeviceTokens": [MockFunction],
    "removePushDeviceToken": [MockFunction],
    "reset": [MockFunction],
    "set": [MockFunction],
    "setGroup": [MockFunction],
    "setOnce": [MockFunction],
    "setPushRegistrationId": [MockFunction],
    "showInAppMessageIfAvailable": [MockFunction],
    "timeEvent": [MockFunction],
    "track": [MockFunction],
    "trackCharge": [MockFunction],
    "trackChargeWithProperties": [MockFunction],
    "union": [MockFunction],
  },
  "orm": Object {},
  "pending": Object {},
  "queryResults": Object {},
  "querySearchTerms": Object {},
  "session": Object {},
}
`;
