// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`constructs a network fetchPosts action 1`] = `
Object {
  "graphql": Object {
    "query": "query (
  $networkSlug: String,
  $sortBy: String,
  $offset: Int,
  $search: String,
  $filter: String,
  $topic: ID,
  $first: Int
) {
  network(slug: $networkSlug) {
    id
    
posts(
  first: $first,
  offset: $offset,
  sortBy: $sortBy,
  search: $search,
  filter: $filter,
  topic: $topic,
  order: \\"desc\\"
) {
  hasMore
  items {
    
  id
  title
  details
  type
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  announcement
  creator {
    id
    name
    avatarUrl
    tagline
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  myEventResponse
  commenters(first: 3) {
    id
    name
    avatarUrl
  }
  commentersTotal
  commentsTotal
  
  linkPreview {
    title
    url
    imageUrl
  }
  votesTotal
  myVote
  groups {
    id
    name
    slug
  }
  attachments {
    id
    position
    type
    url
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    items {
      id
      name
      avatarUrl
    }
    total
  }
  }
}
  }
}",
    "variables": Object {
      "filter": undefined,
      "first": 20,
      "networkSlug": undefined,
      "offset": undefined,
      "search": undefined,
      "slug": undefined,
      "sortBy": undefined,
      "topic": undefined,
    },
  },
  "meta": Object {
    "afterInteractions": true,
    "extractModel": "Network",
    "extractQueryResults": Object {
      "getItems": [Function],
      "reset": undefined,
    },
  },
  "type": "FETCH_POSTS",
}
`;

exports[`constructs a project fetchPosts action 1`] = `
Object {
  "graphql": Object {
    "query": "query (
  $slug: String,
  $sortBy: String,
  $offset: Int,
  $search: String,
  $filter: String,
  $topic: ID,
  $first: Int
) {
  group(slug: $slug, updateLastViewed: true) {
    id
    slug
    name
    avatarUrl
    bannerUrl
    postCount
    
posts(
  first: $first,
  offset: $offset,
  sortBy: $sortBy,
  search: $search,
  filter: $filter,
  topic: $topic,
  order: \\"desc\\"
) {
  hasMore
  items {
    
  id
  title
  details
  type
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  announcement
  creator {
    id
    name
    avatarUrl
    tagline
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  myEventResponse
  commenters(first: 3) {
    id
    name
    avatarUrl
  }
  commentersTotal
  commentsTotal
  
  linkPreview {
    title
    url
    imageUrl
  }
  votesTotal
  myVote
  groups {
    id
    name
    slug
  }
  attachments {
    id
    position
    type
    url
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    items {
      id
      name
      avatarUrl
    }
    total
  }
  }
}
  }
}",
    "variables": Object {
      "filter": "project",
      "first": 20,
      "offset": undefined,
      "search": undefined,
      "slug": undefined,
      "sortBy": undefined,
      "topic": undefined,
    },
  },
  "meta": Object {
    "afterInteractions": true,
    "extractModel": "Group",
    "extractQueryResults": Object {
      "getItems": [Function],
      "reset": undefined,
    },
  },
  "type": "FETCH_POSTS",
}
`;

exports[`sets updateLastViewed to true when fetching for a group 1`] = `
Object {
  "graphql": Object {
    "query": "query (
  $slug: String,
  $sortBy: String,
  $offset: Int,
  $search: String,
  $filter: String,
  $topic: ID,
  $first: Int
) {
  group(slug: $slug, updateLastViewed: true) {
    id
    slug
    name
    avatarUrl
    bannerUrl
    postCount
    
posts(
  first: $first,
  offset: $offset,
  sortBy: $sortBy,
  search: $search,
  filter: $filter,
  topic: $topic,
  order: \\"desc\\"
) {
  hasMore
  items {
    
  id
  title
  details
  type
  location
  locationObject {
    id
    addressNumber
    addressStreet
    bbox {
      lat
      lng
    }
    center {
      lat
      lng
    }
    city
    country
    fullText
    locality
    neighborhood
    region
  }
  announcement
  creator {
    id
    name
    avatarUrl
    tagline
  }
  createdAt
  updatedAt
  isPublic
  fulfilledAt
  startTime
  endTime
  myEventResponse
  commenters(first: 3) {
    id
    name
    avatarUrl
  }
  commentersTotal
  commentsTotal
  
  linkPreview {
    title
    url
    imageUrl
  }
  votesTotal
  myVote
  groups {
    id
    name
    slug
  }
  attachments {
    id
    position
    type
    url
  }
  postMemberships {
    id
    pinned
    group {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
  members {
    items {
      id
      name
      avatarUrl
    }
    total
  }
  }
}
  }
}",
    "variables": Object {
      "filter": undefined,
      "first": 20,
      "offset": undefined,
      "search": undefined,
      "slug": undefined,
      "sortBy": undefined,
      "topic": undefined,
    },
  },
  "meta": Object {
    "afterInteractions": true,
    "extractModel": "Group",
    "extractQueryResults": Object {
      "getItems": [Function],
      "reset": undefined,
    },
  },
  "type": "FETCH_POSTS",
}
`;
