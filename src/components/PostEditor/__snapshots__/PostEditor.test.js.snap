// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor has navigation options 1`] = `
Object {
  "headerBackTitle": null,
  "headerRight": <HeaderButton
    disabled={undefined}
    onPress={[MockFunction]}
    text="Save"
  />,
  "headerStyle": Object {
    "backgroundColor": "white",
    "paddingHorizontal": 10,
  },
  "headerTintColor": "#808c9b",
  "headerTitle": "a title",
  "headerTitleStyle": Object {
    "color": "black",
    "fontFamily": "Circular-Bold",
    "fontSize": 17,
  },
  "isSaving": false,
  "save": [MockFunction],
}
`;

exports[`PostEditor renders a new editor correctly 1`] = `
<Unknown
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollView>
    <View>
      <SectionLabel>
        What are you posting today?
      </SectionLabel>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
      </View>
      <SectionLabel>
        Title
      </SectionLabel>
      <View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <SectionLabel>
        Details
      </SectionLabel>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Details
          details={undefined}
          placeholder="What else should we know?"
        />
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <View>
          <SectionLabel>
            Topics
          </SectionLabel>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          placeholder="Add topics."
          topics={Array []}
        />
      </TouchableOpacity>
    </View>
  </ScrollView>
  <View>
    <View>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Icon
          name="Paperclip"
        />
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Icon
          name="AddImage"
        />
      </TouchableOpacity>
    </View>
  </View>
</Unknown>
`;

exports[`PostEditor renders correctly while saving 1`] = `
<View
  enabled={true}
  keyboardVerticalOffset={64}
  onLayout={[Function]}
>
  <RCTScrollView>
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          What are you posting today?
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              DISCUSSION
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              REQUEST
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              OFFER
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Title
        </Text>
        <View>
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            placeholder="What do you want to discuss?"
            placeholderTextColor="#c0c6cd"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Details
        </Text>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            What else should we know?
          </Text>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Topics
            </Text>
            <View>
              <Icon
                color={undefined}
                name="Plus"
              />
            </View>
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Add topics.
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Icon
          color={undefined}
          name="Paperclip"
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Icon
          color={undefined}
          name="AddImage"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`PostEditor renders correctly while saving 2`] = `
<View
  enabled={true}
  keyboardVerticalOffset={64}
  onLayout={[Function]}
>
  <RCTScrollView>
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          What are you posting today?
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              DISCUSSION
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              REQUEST
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              OFFER
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Title
        </Text>
        <View>
          <TextInput
            allowFontScaling={true}
            editable={false}
            onChangeText={[Function]}
            placeholder="What do you need help with?"
            placeholderTextColor="#c0c6cd"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Details
        </Text>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            What else should we know?
          </Text>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Topics
            </Text>
            <View>
              <Icon
                color={undefined}
                name="Plus"
              />
            </View>
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Add topics.
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Icon
          color={undefined}
          name="Paperclip"
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Icon
          color={undefined}
          name="AddImage"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`PostEditor renders with a post 1`] = `
<Unknown
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollView>
    <View>
      <SectionLabel>
        What are you posting today?
      </SectionLabel>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
      </View>
      <SectionLabel>
        Title
      </SectionLabel>
      <View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <SectionLabel>
        Details
      </SectionLabel>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Details
          details={undefined}
          placeholder="What else should we know?"
        />
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <View>
          <SectionLabel>
            Topics
          </SectionLabel>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          placeholder="Add topics."
          topics={Array []}
        />
      </TouchableOpacity>
      <View>
        <SectionLabel>
          Images
        </SectionLabel>
        <ImageSelector
          id={undefined}
          imageUrls={
            Array [
              "http://foo.com/foo.png",
              "http://baz.com/baz.png",
            ]
          }
          onAdd={[Function]}
          onRemove={[Function]}
          type="post"
        />
      </View>
    </View>
  </ScrollView>
  <View>
    <View>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Icon
          name="Paperclip"
        />
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Icon
          name="AddImage"
        />
      </TouchableOpacity>
    </View>
  </View>
</Unknown>
`;

exports[`SectionLabel renders correctly 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
>
  Label
</Text>
`;

exports[`TypeButton renders correctly 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[MockFunction]}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    DISCUSSION
  </Text>
</TouchableOpacity>
`;
