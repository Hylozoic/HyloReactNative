// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor has navigation options 1`] = `
Object {
  "headerLeft": <BackArrow
    navigation={
        Object {
            "state": Object {
              "params": Object {
                "headerTitle": "a title",
                "isSaving": false,
                "save": [Function],
              },
            },
          }
    }
/>,
  "headerRight": <View>
    <Button
        color="#0DC39F"
        disabled={false}
        onPress={[Function]}
        title="Save"
    />
</View>,
  "headerTintColor": "#0DC39F",
  "headerTitle": "a title",
  "headerTitleStyle": Object {
    "color": "black",
  },
}
`;

exports[`PostEditor renders a new editor correctly 1`] = `
<Unknown
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollViewMock>
    <View>
      <SectionLabel>
        What are you posting today?
      </SectionLabel>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
      </View>
      <SectionLabel>
        Title
      </SectionLabel>
      <View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <SectionLabel>
        Details
      </SectionLabel>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Details
          details={undefined}
          placeholder="What else should we know?"
        />
      </TouchableOpacity>
      <SectionLabel>
        Images
      </SectionLabel>
      <ImageSelector
        id={undefined}
        imageUrls={Array []}
        onAdd={[Function]}
        onRemove={[Function]}
        type="post"
      />
      <SectionLabel>
        Files
      </SectionLabel>
      <Connect(FileSelector)
        fileUrls={undefined}
        id={undefined}
        onAdd={[Function]}
        onRemove={[Function]}
        type="post"
      />
    </View>
  </ScrollViewMock>
</Unknown>
`;

exports[`PostEditor renders correctly while saving 1`] = `
<View
  keyboardVerticalOffset={64}
  onLayout={[Function]}
>
  <RCTScrollView>
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          What are you posting today?
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              DISCUSSION
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              REQUEST
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              OFFER
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Title
        </Text>
        <View>
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            placeholder="What do you want to discuss?"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Details
        </Text>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            What else should we know?
          </Text>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Images
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Icon
              color={undefined}
              name="AddImage"
            />
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Files
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Icon
              color={undefined}
              name="Paperclip"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Add file
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PostEditor renders correctly while saving 2`] = `
<View
  keyboardVerticalOffset={64}
  onLayout={[Function]}
>
  <RCTScrollView>
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          What are you posting today?
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              DISCUSSION
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              REQUEST
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              OFFER
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Title
        </Text>
        <View>
          <TextInput
            allowFontScaling={true}
            editable={false}
            onChangeText={[Function]}
            placeholder="What do you need help with?"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Details
        </Text>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            What else should we know?
          </Text>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Images
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Icon
              color={undefined}
              name="AddImage"
            />
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Files
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Icon
              color={undefined}
              name="Paperclip"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Add file
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PostEditor renders with a post 1`] = `
<Unknown
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollViewMock>
    <View>
      <SectionLabel>
        What are you posting today?
      </SectionLabel>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
      </View>
      <SectionLabel>
        Title
      </SectionLabel>
      <View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <SectionLabel>
        Details
      </SectionLabel>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Details
          details={undefined}
          placeholder="What else should we know?"
        />
      </TouchableOpacity>
      <SectionLabel>
        Images
      </SectionLabel>
      <ImageSelector
        id={undefined}
        imageUrls={
          Array [
            "http://foo.com/foo.png",
            "http://baz.com/baz.png",
          ]
        }
        onAdd={[Function]}
        onRemove={[Function]}
        type="post"
      />
      <SectionLabel>
        Files
      </SectionLabel>
      <Connect(FileSelector)
        fileUrls={undefined}
        id={undefined}
        onAdd={[Function]}
        onRemove={[Function]}
        type="post"
      />
    </View>
  </ScrollViewMock>
</Unknown>
`;

exports[`SectionLabel renders correctly 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
>
  Label
</Text>
`;

exports[`TypeButton renders correctly 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    DISCUSSION
  </Text>
</TouchableOpacity>
`;
