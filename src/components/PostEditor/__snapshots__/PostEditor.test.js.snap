// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor has navigation options 1`] = `
Object {
  "headerBackTitle": null,
  "headerLeft": <HeaderBackButton
    buttonImage={
      Object {
        "testUri": "../../react-navigation/src/views/assets/back-icon.png",
      }
    }
    onPress={[Function]}
    pressColorAndroid="rgba(0, 0, 0, .32)"
    tintColor="#808c9b"
    truncatedTitle="Back"
  />,
  "headerRight": <HeaderButton
    disableOnClick={true}
    disabled={false}
    onPress={[MockFunction]}
    text="Save"
  />,
  "headerStyle": Object {
    "backgroundColor": "white",
    "paddingHorizontal": 10,
  },
  "headerTintColor": "#808c9b",
  "headerTitle": "a title",
  "headerTitleStyle": Object {
    "color": "black",
    "fontFamily": "Circular-Bold",
    "fontSize": 17,
  },
  "isSaving": false,
  "save": [MockFunction],
}
`;

exports[`PostEditor renders a new editor correctly 1`] = `
<_default
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollViewMock
    keyboardShouldPersistTaps="handled"
  >
    <View>
      <SectionLabel>
        What are you posting today?
      </SectionLabel>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="resource"
        />
      </View>
      <SectionLabel>
        Title
      </SectionLabel>
      <View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          maxLength={100}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          rejectResponderTermination={true}
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <SectionLabel>
        Details
      </SectionLabel>
      <withNavigation(InlineEditor)
        autoGrow={false}
        containerStyle={
          Object {
            "borderBottomColor": "#c0c6cd",
            "borderBottomWidth": 0.5,
            "marginBottom": 10,
            "paddingBottom": 10,
          }
        }
        editable={true}
        inputStyle={
          Object {
            "fontFamily": "Circular-Book",
          }
        }
        onChange={[Function]}
        onFocusToggle={[Function]}
        onInsertTopic={[Function]}
        placeholder="What else should we know?"
        value=""
      />
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <View>
          <SectionLabel>
            Topics
          </SectionLabel>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          topics={Array []}
        />
        <Text>
          Add topics.
        </Text>
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <View>
          <SectionLabel>
            Post In
          </SectionLabel>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <CommunitiesList
          RightIcon={[Function]}
          columns={1}
          communities={Array []}
          onPress={[Function]}
        />
        <Text>
          Select which communities to post in.
        </Text>
      </TouchableOpacity>
    </View>
  </ScrollViewMock>
  <Toolbar
    announcementEnabled={false}
    showFilePicker={[Function]}
    showImagePicker={[Function]}
    toggleAnnoucement={[Function]}
  />
</_default>
`;

exports[`PostEditor renders correctly while saving 1`] = `
<View
  onLayout={[Function]}
>
  <RCTScrollView
    keyboardShouldPersistTaps="handled"
  >
    <View>
      <View>
        <Text>
          What are you posting today?
        </Text>
        <View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              DISCUSSION
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              REQUEST
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              OFFER
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              RESOURCE
            </Text>
          </View>
        </View>
        <Text>
          Title
        </Text>
        <View>
          <TextInput
            allowFontScaling={true}
            editable={true}
            maxLength={100}
            onChangeText={[Function]}
            placeholder="What do you want to discuss?"
            placeholderTextColor="#c0c6cd"
            rejectResponderTermination={true}
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text>
          Details
        </Text>
        <View>
          <View>
            <TextInput
              allowFontScaling={true}
              blurOnSubmit={false}
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              onSelectionChange={[Function]}
              placeholder="What else should we know?"
              placeholderTextColor="#c0c6cd"
              rejectResponderTermination={true}
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <Text>
              Topics
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <Text>
            Add topics.
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <Text>
              Post In
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Image
                source={
                  Object {
                    "uri": "https://d3ngex8q79bk55.cloudfront.net/misc/default_community_avatar.png",
                  }
                }
              />
              <Text
                numberOfLines={1}
              >
                Community 1
              </Text>
              <Icon
                name="Ex"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Icon
          name="Paperclip"
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Icon
          name="AddImage"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`PostEditor renders correctly while saving 2`] = `
<View
  onLayout={[Function]}
>
  <RCTScrollView
    keyboardShouldPersistTaps="handled"
  >
    <View>
      <View>
        <Text>
          What are you posting today?
        </Text>
        <View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              DISCUSSION
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              REQUEST
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              OFFER
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text>
              RESOURCE
            </Text>
          </View>
        </View>
        <Text>
          Title
        </Text>
        <View>
          <TextInput
            allowFontScaling={true}
            editable={false}
            maxLength={100}
            onChangeText={[Function]}
            placeholder="What do you need help with?"
            placeholderTextColor="#c0c6cd"
            rejectResponderTermination={true}
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text>
          Details
        </Text>
        <View>
          <View>
            <TextInput
              allowFontScaling={true}
              blurOnSubmit={false}
              editable={false}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              onSelectionChange={[Function]}
              placeholder="What else should we know?"
              placeholderTextColor="#c0c6cd"
              rejectResponderTermination={true}
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <Text>
              Topics
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <Text>
            Add topics.
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <Text>
              Start Time
            </Text>
          </View>
          <Text />
        </View>
        <View />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <Text>
              End Time
            </Text>
          </View>
          <Text />
        </View>
        <View />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <Text>
              Post In
            </Text>
            <View>
              <Icon
                name="Plus"
              />
            </View>
          </View>
          <View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Image
                source={
                  Object {
                    "uri": "https://d3ngex8q79bk55.cloudfront.net/misc/default_community_avatar.png",
                  }
                }
              />
              <Text
                numberOfLines={1}
              >
                Community 1
              </Text>
              <Icon
                name="Ex"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Icon
          name="Paperclip"
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Icon
          name="AddImage"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`PostEditor renders with a post 1`] = `
<_default
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollViewMock
    keyboardShouldPersistTaps="handled"
  >
    <View>
      <SectionLabel>
        What are you posting today?
      </SectionLabel>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="resource"
        />
      </View>
      <SectionLabel>
        Title
      </SectionLabel>
      <View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          maxLength={100}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          rejectResponderTermination={true}
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <SectionLabel>
        Details
      </SectionLabel>
      <withNavigation(InlineEditor)
        autoGrow={false}
        containerStyle={
          Object {
            "borderBottomColor": "#c0c6cd",
            "borderBottomWidth": 0.5,
            "marginBottom": 10,
            "paddingBottom": 10,
          }
        }
        editable={true}
        inputStyle={
          Object {
            "fontFamily": "Circular-Book",
          }
        }
        onChange={[Function]}
        onFocusToggle={[Function]}
        onInsertTopic={[Function]}
        placeholder="What else should we know?"
        value=""
      />
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <View>
          <SectionLabel>
            Topics
          </SectionLabel>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          topics={Array []}
        />
        <Text>
          Add topics.
        </Text>
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <View>
          <SectionLabel>
            Post In
          </SectionLabel>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <CommunitiesList
          RightIcon={[Function]}
          columns={1}
          communities={
            Array [
              Object {
                "id": 1,
                "name": "Community 1",
              },
            ]
          }
          onPress={[Function]}
        />
      </TouchableOpacity>
      <View>
        <SectionLabel>
          Images
        </SectionLabel>
        <ImageSelector
          imageUrls={
            Array [
              "http://foo.com/foo.png",
              "http://baz.com/baz.png",
            ]
          }
          onAdd={[Function]}
          onRemove={[Function]}
          type="post"
        />
      </View>
    </View>
  </ScrollViewMock>
  <Toolbar
    announcementEnabled={false}
    post={
      Object {
        "communities": Array [
          Object {
            "id": 1,
            "name": "Community 1",
          },
        ],
        "details": "myDetails",
      }
    }
    showFilePicker={[Function]}
    showImagePicker={[Function]}
    toggleAnnoucement={[Function]}
  />
</_default>
`;

exports[`SectionLabel renders correctly 1`] = `
<Text>
  Label
</Text>
`;

exports[`TypeButton renders correctly 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[MockFunction]}
>
  <Text>
    DISCUSSION
  </Text>
</TouchableOpacity>
`;
