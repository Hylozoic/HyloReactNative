// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor renders a new editor correctly 1`] = `
<_default>
  <ScrollView
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
  >
    <View>
      <Text>
        What are you posting today?
      </Text>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="resource"
        />
      </View>
      <Text>
        Title
      </Text>
      <View>
        <Component
          allowFontScaling={true}
          editable={true}
          maxLength={100}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          rejectResponderTermination={true}
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <Text>
        Details
      </Text>
      <withNavigation(InlineEditor)
        autoGrow={false}
        editable={true}
        inputStyle={
          Object {
            "fontFamily": "Circular-Book",
            "fontSize": 14,
            "margin": 0,
            "padding": 0,
          }
        }
        onChange={[Function]}
        onFocusToggle={[Function]}
        onInsertTopic={[Function]}
        placeholder="What else should we know?"
        value=""
      />
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Topics
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          topics={Array []}
        />
        <Text>
          Add topics.
        </Text>
      </ForwardRef>
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Post In
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <CommunitiesList
          RightIcon={[Function]}
          columns={1}
          communities={Array []}
          onPress={[Function]}
        />
        <Text>
          Select which communities to post in.
        </Text>
      </ForwardRef>
    </View>
  </ScrollView>
  <Toolbar
    announcementEnabled={false}
    showFilePicker={[Function]}
    showImagePicker={[Function]}
    toggleAnnoucement={[Function]}
  />
</_default>
`;

exports[`PostEditor renders with a post 1`] = `
<_default>
  <ScrollView
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
  >
    <View>
      <Text>
        What are you posting today?
      </Text>
      <View>
        <TypeButton
          onPress={[Function]}
          selected={true}
          type="discussion"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="request"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="offer"
        />
        <TypeButton
          onPress={[Function]}
          selected={false}
          type="resource"
        />
      </View>
      <Text>
        Title
      </Text>
      <View>
        <Component
          allowFontScaling={true}
          editable={true}
          maxLength={100}
          onChangeText={[Function]}
          placeholder="What do you want to discuss?"
          placeholderTextColor="#c0c6cd"
          rejectResponderTermination={true}
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <Text>
        Details
      </Text>
      <withNavigation(InlineEditor)
        autoGrow={false}
        editable={true}
        inputStyle={
          Object {
            "fontFamily": "Circular-Book",
            "fontSize": 14,
            "margin": 0,
            "padding": 0,
          }
        }
        onChange={[Function]}
        onFocusToggle={[Function]}
        onInsertTopic={[Function]}
        placeholder="What else should we know?"
        value=""
      />
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Topics
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <Topics
          onPress={[Function]}
          topics={Array []}
        />
        <Text>
          Add topics.
        </Text>
      </ForwardRef>
      <ForwardRef
        onPress={[Function]}
      >
        <View>
          <Text>
            Post In
          </Text>
          <View>
            <Icon
              name="Plus"
            />
          </View>
        </View>
        <CommunitiesList
          RightIcon={[Function]}
          columns={1}
          communities={
            Array [
              Object {
                "id": 1,
                "name": "Community 1",
              },
            ]
          }
          onPress={[Function]}
        />
      </ForwardRef>
      <View>
        <Text>
          Images
        </Text>
        <ImageSelector
          imageUrls={
            Array [
              "http://foo.com/foo.png",
              "http://baz.com/baz.png",
            ]
          }
          onAdd={[Function]}
          onRemove={[Function]}
          type="post"
        />
      </View>
    </View>
  </ScrollView>
  <Toolbar
    announcementEnabled={false}
    post={
      Object {
        "communities": Array [
          Object {
            "id": 1,
            "name": "Community 1",
          },
        ],
        "details": "myDetails",
      }
    }
    showFilePicker={[Function]}
    showImagePicker={[Function]}
    toggleAnnoucement={[Function]}
  />
</_default>
`;

exports[`TypeButton renders correctly 1`] = `
<ForwardRef
  onPress={[MockFunction]}
>
  <Text>
    DISCUSSION
  </Text>
</ForwardRef>
`;
