// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostEditor mapDispatchToProps calls save correctly 1`] = `
Object {
  "fetchDetailsText": [Function],
  "save": [Function],
  "upload": [Function],
}
`;

exports[`PostEditor mapDispatchToProps calls save correctly 2`] = `
Array [
  Array [
    Object {
      "graphql": Object {
        "query": "mutation ($id: ID
        $type: String
        $title: String
        $details: String
        $communityIds: [String]
        $imageUrls: [String]
        $fileUrls: [String]
        $topicNames: [String]
      ) {
        updatePost(id: $id, data: {
          type: $type
          title: $title
          details: $details
          communityIds: $communityIds
          imageUrls: $imageUrls
          fileUrls: $fileUrls
          topicNames: $topicNames
        }) {
          
  id
  title
  details
  type
  location
  announcement
  creator {
    id
    name
    avatarUrl
    tagline
  }
  createdAt
  updatedAt
  commenters(first: 3) {
    id
    name
    avatarUrl
  }
  commentersTotal
  commentsTotal
  comments(first: 10, order: \\"desc\\") {
    items {
      id
      text
      creator {
        id
        name
        avatarUrl
      }
      createdAt
    }
    total
    hasMore
  }
  linkPreview {
    title
    url
    imageUrl
  }
  votesTotal
  myVote
  communities {
    id
    name
    slug
  }
  attachments {
    id
    position
    type
    url
  }
  postMemberships {
    id
    pinned
    community {
      id
    }
  }
  topics {
    id
    name
    postsTotal
    followersTotal
  }
        }
      }",
        "variables": Object {
          "communityIds": Array [
            1,
          ],
          "details": "",
          "fileUrls": Array [],
          "id": 1,
          "imageUrls": Array [],
          "title": "a title",
          "topicNames": Array [],
          "type": undefined,
        },
      },
      "meta": Object {
        "extractModel": Object {
          "append": false,
          "getRoot": [Function],
          "modelName": "Post",
        },
      },
      "type": "PostEditor/UPDATE_POST",
    },
  ],
]
`;

exports[`PostEditor mapDispatchToProps maps the action generators 1`] = `
Object {
  "fetchDetailsText": [Function],
  "save": [Function],
  "upload": [Function],
}
`;

exports[`PostEditor mapDispatchToProps maps the action generators 2`] = `
Array [
  Array [
    Object {
      "graphql": Object {
        "query": "query ($id: ID) {
        post(id: $id) {
          id
          detailsText
        }
      }",
        "variables": Object {
          "id": 1,
        },
      },
      "meta": Object {
        "extractModel": "Post",
      },
      "type": "PostEditor/FETCH_DETAILS_TEXT",
    },
  ],
]
`;

exports[`PostEditor mapStateToProps maps 1`] = `
Object {
  "canModerate": true,
  "communityIds": Array [
    "7",
    "8",
  ],
  "fileUrls": Array [],
  "imageUrls": Array [
    "bar.png",
    "foo.png",
  ],
  "isNewPost": true,
  "pendingDetailsText": undefined,
  "post": Object {
    "commenters": Array [],
    "communities": Array [
      Object {
        "id": "7",
      },
      Object {
        "id": "8",
      },
    ],
    "creator": Object {
      "id": "10",
    },
    "fileAttachments": Array [],
    "fileUrls": Array [],
    "id": "1",
    "imageUrls": Array [
      "bar.png",
      "foo.png",
    ],
    "linkPreview": undefined,
    "pinned": undefined,
    "topics": Array [],
  },
}
`;
