// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`has navigationOptions 1`] = `
Object {
  "headerBackTitle": null,
  "headerStyle": Object {
    "backgroundColor": "#0DC39F",
    "shadowColor": "transparent",
  },
  "headerTintColor": "#9ee7d9",
  "headerTitle": "STEP 5/5",
  "headerTitleStyle": Object {
    "color": "white",
    "fontFamily": "Circular-Bold",
    "fontSize": 12,
  },
}
`;

exports[`hides image when no url and password when no password 1`] = `
<Unknown
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollViewMock>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Everything looking good?
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      You can always come back and change your details at any time.
    </Text>
    <SettingControl
      error={undefined}
      label="Your Full Name"
      onChange={[Function]}
      onSubmitEditing={[Function]}
      toggleEditable={true}
      value="Hill"
    />
    <SettingControl
      autoCapitalize="none"
      autoCorrect={false}
      error={undefined}
      keyboardType="email-address"
      label="Email Address"
      onChange={[Function]}
      onSubmitEditing={[Function]}
      toggleEditable={true}
      value="jill@hill.com"
    />
    <SettingControl
      label="Location"
      onChange={[Function]}
      onSubmitEditing={[Function]}
      toggleEditable={true}
      value="hill"
    />
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Skills
      </Text>
      <SkillCloud
        onPress={undefined}
        skills={
          Array [
            "One",
            "Two",
          ]
        }
      />
    </TouchableOpacity>
    <View>
      <Button
        onPress={[Function]}
        text="Make Changes"
      />
      <Button
        onPress={[Function]}
        text="Finish"
      />
    </View>
  </ScrollViewMock>
</Unknown>
`;

exports[`matches last snapshot 1`] = `
<Unknown
  behavior="padding"
  keyboardVerticalOffset={64}
>
  <ScrollViewMock>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Everything looking good?
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      You can always come back and change your details at any time.
    </Text>
    <View>
      <TouchableOpacity
        activeOpacity={0.2}
        onPress={undefined}
      >
        <Image
          source={
            Object {
              "uri": "mill.png",
            }
          }
        />
      </TouchableOpacity>
    </View>
    <SettingControl
      error={undefined}
      label="Your Full Name"
      onChange={[Function]}
      onSubmitEditing={[Function]}
      toggleEditable={true}
      value="Hill"
    />
    <SettingControl
      autoCapitalize="none"
      autoCorrect={false}
      error={undefined}
      keyboardType="email-address"
      label="Email Address"
      onChange={[Function]}
      onSubmitEditing={[Function]}
      toggleEditable={true}
      value="jill@hill.com"
    />
    <SettingControl
      label="Location"
      onChange={[Function]}
      onSubmitEditing={[Function]}
      toggleEditable={true}
      value="hill"
    />
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Skills
      </Text>
      <SkillCloud
        onPress={undefined}
        skills={
          Array [
            "One",
            "Two",
          ]
        }
      />
    </TouchableOpacity>
    <View>
      <Button
        onPress={[Function]}
        text="Make Changes"
      />
      <Button
        onPress={[Function]}
        text="Finish"
      />
    </View>
  </ScrollViewMock>
</Unknown>
`;

exports[`validate returns false and populates state when the props are bad 1`] = `
Object {
  "confirmPassword": "Passwords must match",
  "email": "Must be a valid email",
  "name": "Name must not consist solely of whitespace.",
  "password": "Password must be at least 9 characters.",
}
`;

exports[`validate returns true when the props are good 1`] = `
Object {
  "confirmPassword": false,
  "email": false,
  "name": null,
  "password": null,
}
`;
