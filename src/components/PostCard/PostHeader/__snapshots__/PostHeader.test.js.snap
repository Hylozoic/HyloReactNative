// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostLabel renders 1`] = `
<View>
  <Text>
    REQUEST
  </Text>
</View>
`;

exports[`PostMenu returns a popupmenu when deleting allowed 1`] = `
<PopupMenuButton
  actions={
    Array [
      Array [
        "Delete This Post",
        [Function],
      ],
    ]
  }
  destructiveButtonIndex={0}
  hitSlop={
    Object {
      "bottom": 10,
      "left": 10,
      "right": 15,
      "top": 20,
    }
  }
>
  <Icon
    name="More"
  />
</PopupMenuButton>
`;

exports[`PostMenu returns a popupmenu when editing allowed 1`] = `
<PopupMenuButton
  actions={
    Array [
      Array [
        "Edit This Post",
        [Function],
      ],
    ]
  }
  destructiveButtonIndex={-1}
  hitSlop={
    Object {
      "bottom": 10,
      "left": 10,
      "right": 15,
      "top": 20,
    }
  }
>
  <Icon
    name="More"
  />
</PopupMenuButton>
`;

exports[`PostMenu returns a popupmenu when flagging allowed 1`] = `
<PopupMenuButton
  actions={
    Array [
      Array [
        "Flag This Post",
        [Function],
      ],
    ]
  }
  destructiveButtonIndex={0}
  hitSlop={
    Object {
      "bottom": 10,
      "left": 10,
      "right": 15,
      "top": 20,
    }
  }
>
  <Icon
    name="More"
  />
</PopupMenuButton>
`;

exports[`PostMenu returns a popupmenu when removePost 1`] = `
<PopupMenuButton
  actions={
    Array [
      Array [
        "Remove Post From Group",
        [Function],
      ],
    ]
  }
  destructiveButtonIndex={0}
  hitSlop={
    Object {
      "bottom": 10,
      "left": 10,
      "right": 15,
      "top": 20,
    }
  }
>
  <Icon
    name="More"
  />
</PopupMenuButton>
`;

exports[`PostMenu returns null when no actions 1`] = `null`;

exports[`renders correctly when showGroup is true 1`] = `
<View>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Avatar
        avatarUrl="foo.png"
      />
    </TouchableOpacity>
  </View>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Text>
        Zeus
      </Text>
      <Text>
        Go!
      </Text>
    </TouchableOpacity>
    <View>
      <Text>
        10m ago
      </Text>
    </View>
  </View>
  <View>
    <PostMenu
      deletePost={[Function]}
      flagPost={[Function]}
      pinPost={[Function]}
      pinned={false}
      removePost={null}
    />
  </View>
</View>
`;

exports[`renders correctly with all=true, and no group or user 1`] = `
<View>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Avatar
        avatarUrl="foo.png"
      />
    </TouchableOpacity>
  </View>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Text>
        Zeus
      </Text>
      <Text>
        Go!
      </Text>
    </TouchableOpacity>
    <View>
      <Text>
        10m ago
      </Text>
      <FlatList
        data={
          Array [
            Object {
              "name": "topic1",
            },
            Object {
              "name": "topic2",
            },
          ]
        }
        horizontal={true}
        keyExtractor={[Function]}
        renderItem={[Function]}
        showsHorizontalScrollIndicator={false}
      />
    </View>
  </View>
  <View>
    <Icon
      name="Pin"
    />
    <PostMenu
      deletePost={[Function]}
      flagPost={[Function]}
      pinPost={[Function]}
      pinned={true}
      removePost={[Function]}
    />
  </View>
</View>
`;

exports[`renders correctly with no flagging 1`] = `
<View>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Avatar
        avatarUrl="foo.png"
      />
    </TouchableOpacity>
  </View>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Text>
        Zeus
      </Text>
      <Text>
        Go!
      </Text>
    </TouchableOpacity>
    <View>
      <Text>
        10m ago
      </Text>
    </View>
  </View>
  <View>
    <Icon
      name="Pin"
    />
    <PostMenu
      deletePost={[Function]}
      pinPost={[Function]}
      pinned={true}
      removePost={null}
    />
  </View>
</View>
`;
