// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mapDispatchToProps maps the action generators 1`] = `
Object {
  "clearNameAndUrlFromStore": [Function],
  "createCommunity": [Function],
  "selectCommunity": [Function],
}
`;

exports[`mapDispatchToProps maps the action generators 2`] = `
Array [
  Array [
    Object {
      "graphql": Object {
        "query": "mutation ($data: CommunityInput) {
        createCommunity(data: $data) {
          id
          hasModeratorRole
          community {
            id
            name
            slug
          }
        }
      }
      ",
        "variables": Object {
          "data": Object {
            "name": "name",
            "slug": "my-url",
          },
        },
      },
      "meta": Object {
        "analytics": "Community Created",
        "extractModel": "Membership",
        "name": "name",
        "slug": "my-url",
      },
      "type": "CreateCommunityFlow/CREATE_COMMUNITY",
    },
  ],
  Array [
    Object {
      "type": "CreateCommunityFlow/CLEAR_NAME_AND_URL_FROM_STORE",
    },
  ],
  Array [
    Object {
      "payload": Object {
        "id": 1,
      },
      "type": "SELECT_COMMUNITY",
    },
  ],
]
`;

exports[`mapStateToProps returns the right keys 1`] = `
Object {
  "communityName": "name",
  "communityUrl": "my-url",
  "createCommunityPending": true,
}
`;

exports[`mergeProps merges the props 1`] = `
Object {
  "CreateCommunityFlow": Object {
    "communityName": "name",
    "communityUrl": "my-url",
  },
  "goToCommunity": [Function],
  "goToCreateCommunityName": [Function],
  "goToCreateCommunityUrl": [Function],
  "navigation": Object {
    "closeDrawer": [MockFunction],
    "navigate": [MockFunction],
  },
  "pending": Object {
    "CreateCommunityFlow/CREATE_COMMUNITY": true,
  },
  "selectCommunity": [MockFunction],
}
`;
