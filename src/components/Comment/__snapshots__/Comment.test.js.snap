// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`commentMenu renders correctly 1`] = `
<PopupMenuButton
  actions={
    Array [
      Array [
        "Delete Comment",
        [MockFunction],
      ],
    ]
  }
  destructiveButtonIndex={0}
  hitSlop={
    Object {
      "bottom": 10,
      "left": 0,
      "right": 15,
      "top": 20,
    }
  }
>
  <Icon
    name="More"
  />
</PopupMenuButton>
`;

exports[`commentMenu returns removeComment 1`] = `
<PopupMenuButton
  actions={
    Array [
      Array [
        "Remove Comment",
        [MockFunction],
      ],
    ]
  }
  destructiveButtonIndex={0}
  hitSlop={
    Object {
      "bottom": 10,
      "left": 0,
      "right": 15,
      "top": 20,
    }
  }
>
  <Icon
    name="More"
  />
</PopupMenuButton>
`;

exports[`renders correctly 1`] = `
<TouchableOpacity
  onPress={[Function]}
>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Avatar
        avatarUrl="foo.png"
      />
    </TouchableOpacity>
    <View>
      <View>
        <View>
          <TouchableOpacity
            onPress={[Function]}
          >
            <Text>
              Ishamel
            </Text>
          </TouchableOpacity>
          <Text>
            
          </Text>
        </View>
        <View>
          <TouchableOpacity
            onPress={[Function]}
          >
            <Icon
              name="Reply"
            />
            <Text>
              Reply
            </Text>
          </TouchableOpacity>
          <CommentMenu
            deleteComment={[Function]}
            removeComment={[Function]}
          />
        </View>
      </View>
      <HtmlView
        RootComponent={[Function]}
        addLineBreaks={false}
        onError={[Function]}
        onLinkLongPress={null}
        onLinkPress={[Function]}
        stylesheet={
          Object {
            "a": Object {
              "color": "#0DC39F",
            },
            "p": Object {
              "marginBottom": 3,
              "marginTop": 3,
            },
          }
        }
        textComponentProps={
          Object {
            "style": Object {
              "color": "#5D757A",
              "fontFamily": "Circular-Book",
              "fontSize": 14,
              "height": 0,
            },
          }
        }
        value="<p>tick followed tock followed tick followed tock</p>"
      />
    </View>
  </View>
</TouchableOpacity>
`;

exports[`shows the post title when displayPostTitle is true 1`] = `
<TouchableOpacity
  onPress={[Function]}
>
  <View>
    <TouchableOpacity
      onPress={[Function]}
    >
      <Avatar
        avatarUrl="foo.png"
      />
    </TouchableOpacity>
    <View>
      <View>
        <View>
          <TouchableOpacity
            onPress={[Function]}
          >
            <Text>
              Ishamel
            </Text>
          </TouchableOpacity>
          <Text>
            
          </Text>
          <Text>
            on "
            What's good? A long enough post title to...
            "
          </Text>
        </View>
        <View>
          <TouchableOpacity
            onPress={[Function]}
          >
            <Icon
              name="Reply"
            />
            <Text>
              Reply
            </Text>
          </TouchableOpacity>
          <CommentMenu
            deleteComment={[Function]}
            removeComment={[Function]}
          />
        </View>
      </View>
      <HtmlView
        RootComponent={[Function]}
        addLineBreaks={false}
        onError={[Function]}
        onLinkLongPress={null}
        onLinkPress={[Function]}
        stylesheet={
          Object {
            "a": Object {
              "color": "#0DC39F",
            },
            "p": Object {
              "marginBottom": 3,
              "marginTop": 3,
            },
          }
        }
        textComponentProps={
          Object {
            "style": Object {
              "color": "#5D757A",
              "fontFamily": "Circular-Book",
              "fontSize": 14,
              "height": 0,
            },
          }
        }
        value="<p>tick followed tock followed tick followed tock</p>"
      />
    </View>
  </View>
</TouchableOpacity>
`;
