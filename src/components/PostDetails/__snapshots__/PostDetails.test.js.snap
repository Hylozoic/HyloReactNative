// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommentPrompt renders correctly 1`] = `
<View>
  <InlineEditor
    communityId={undefined}
    onChange={undefined}
    onSubmit={undefined}
    placeholder="Joe, how can you help?"
    submitting={undefined}
    value={undefined}
  />
</View>
`;

exports[`Files renders correctly 1`] = `
<View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View>
      <Icon
        color={undefined}
        name="Document"
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={2}
      >
        foo.pdf
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View>
      <Icon
        color={undefined}
        name="Document"
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={2}
      >
        bar.zip
      </Text>
    </View>
  </View>
</View>
`;

exports[`PostDetails renders correctly 1`] = `
<View>
  <Connect(Comments)
    footer={
      <CommentPrompt
        commentText=""
        communityId={undefined}
        currentUser={
          Object {
            "avatarUrl": "me.png",
            "firstName": [Function],
            "id": 123,
          }
        }
        onChange={[Function]}
        onSubmit={[Function]}
        submitting={undefined}
      />
    }
    header={
      <View>
        <withNavigation(Connect(PostHeader))
          announcement={undefined}
          communities={
            Array [
              Object {
                "slug": "foom",
              },
            ]
          }
          creator={
            Object {
              "id": "77",
              "name": "Houdini",
            }
          }
          date="2017-05-19T23:24:58Z"
          editPost={[MockFunction]}
          goToCommunity={[Function]}
          pinned={true}
          postId="91"
          showMember={[Function]}
          showTopic={[Function]}
          slug="foom"
          topics={
            Array [
              Object {
                "id": 1,
                "name": "topic1",
              },
            ]
          }
          type="request"
        />
        <PostImage
          imageUrls={
            Array [
              "foom.png",
            ]
          }
          linked={true}
        />
        <PostBody
          details="Lo"
          linkPreview={undefined}
          showMember={[Function]}
          showTopic={[Function]}
          slug="foom"
          title="Hi"
        />
        <PostCommunities
          communities={
            Array [
              Object {
                "slug": "foom",
              },
            ]
          }
          goToCommunity={[Function]}
          slug="foom"
        />
        <Files
          urls={
            Array [
              "http://foo.com/foo.pdf",
              "http://foo.com/bar.zip",
            ]
          }
        />
        <Connect(PostFooter)
          commenters={
            Array [
              Object {
                "id": 9,
              },
              Object {
                "id": 7,
              },
            ]
          }
          commentsTotal={12}
          currentUser={
            Object {
              "avatarUrl": "me.png",
              "firstName": [Function],
              "id": 123,
            }
          }
          id="91"
          myVote={true}
          showActivityLabel={true}
          votesTotal={8}
        />
      </View>
    }
    postId="91"
    postPending={false}
    showMember={[Function]}
    showTopic={[Function]}
    slug="foom"
  />
  <Connect(SocketSubscriber)
    id="91"
    type="post"
  />
</View>
`;
