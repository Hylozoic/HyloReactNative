// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MemberList renders with default props with default non-server search 1`] = `
<FlatList
  ListFooterComponent={null}
  ListHeaderComponent={
    <View>
      <View>
        <SearchBar
          onChangeText={[Function]}
          placeholder="Search Members"
        />
        <PopupMenuButton
          actions={[]}
        >
          <Text />
          <Icon
            name="ArrowDown"
          />
        </PopupMenuButton>
      </View>
    </View>
  }
  data={
    [
      {
        "id": "1",
        "name": "Loren",
      },
      {
        "id": "2",
        "name": "Robbie",
      },
    ]
  }
  keyExtractor={[Function]}
  numColumns="2"
  onEndReached={false}
  renderItem={[Function]}
/>
`;

exports[`MemberList runs call for new results if server search 1`] = `
<FlatList
  ListFooterComponent={null}
  ListHeaderComponent={
    <View>
      <View>
        <SearchBar
          onChangeText={[Function]}
          placeholder="Search Members"
        />
        <PopupMenuButton
          actions={[]}
        >
          <Text />
          <Icon
            name="ArrowDown"
          />
        </PopupMenuButton>
      </View>
    </View>
  }
  data={
    [
      {
        "id": "1",
        "name": "Loren",
      },
      {
        "id": "2",
        "name": "Robbie",
      },
    ]
  }
  keyExtractor={[Function]}
  numColumns="2"
  onEndReached={[Function]}
  renderItem={[Function]}
/>
`;

exports[`MemberList server search fetches new results when search provided 1`] = `
<RCTScrollView
  ListFooterComponent={null}
  ListHeaderComponent={
    <View>
      <View>
        <SearchBar
          onChangeText={[Function]}
          placeholder="Search Members"
        />
        <PopupMenuButton
          actions={Array []}
        >
          <Text />
          <Icon
            name="ArrowDown"
          />
        </PopupMenuButton>
      </View>
    </View>
  }
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View>
        <View>
          <View>
            <Icon
              name="Search"
            />
            <TextInput
              autoCapitalize="none"
              autoCorrect={false}
              autoFocus={false}
              editable={true}
              onChangeText={[Function]}
              placeholder="Search Members"
              underlineColorAndroid="transparent"
            />
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text />
            <Icon
              name="ArrowDown"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
